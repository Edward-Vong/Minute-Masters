{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\Timesheet\\\\timesheetFormAssets\\\\timesheetForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetForm = ({\n  selectedDate,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: selectedDate ? `${selectedDate.day} ${selectedDate.month} ${selectedDate.year}` : '',\n    checkIn: '',\n    checkOut: ''\n  });\n  const [isCheckIn, setIsCheckIn] = useState(true);\n  const [startDate, setStartDate] = useState(null);\n  const [checkInTime, setCheckInTime] = useState(null);\n  const [totalTime, setTotalTime] = useState(\"\");\n  const [isSameAsCurrentDate, setIsSameAsCurrentDate] = useState(false);\n  const [hasData, setHasData] = useState(true);\n  useEffect(() => {\n    // Fetch check-in time when the component mounts\n    refreshData();\n    checkIfSameAsCurrentDate();\n  }, [selectedDate]); // Trigger when selectedDate changes\n\n  const refreshData = async () => {\n    await getCheckInTime();\n    checkIfSameAsCurrentDate();\n  };\n  const getCheckInTime = async () => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timesheet', {\n        method: 'GET',\n        headers: {\n          Authorization: authToken\n        }\n      });\n      const monthNameToNumber = {\n        January: 0,\n        February: 1,\n        March: 2,\n        April: 3,\n        May: 4,\n        June: 5,\n        July: 6,\n        August: 7,\n        September: 8,\n        October: 9,\n        November: 10,\n        December: 11\n      };\n      const selectedDateObject = new Date(selectedDate.year, monthNameToNumber[selectedDate.month], selectedDate.day);\n      const data = null;\n      if (response.ok) {\n        dataArray.timerData.forEach(dataVal => {\n          console.log(dataVal.date);\n          const dataDate = new Date(dataVal.date);\n          console.log(dataDate); // Log the parsed date\n\n          const selectedDateUTC = new Date(Date.UTC(selectedDateObject.getUTCFullYear(), selectedDateObject.getUTCMonth(), selectedDateObject.getUTCDate(), selectedDateObject.getUTCHours(), selectedDateObject.getUTCMinutes(), selectedDateObject.getUTCSeconds(), selectedDateObject.getUTCMilliseconds()));\n          if (selectedDateUTC.getUTCFullYear() === dataDate.getUTCFullYear() && selectedDateUTC.getUTCMonth() === dataDate.getUTCMonth() && selectedDateUTC.getUTCDate() === dataDate.getUTCDate()) {\n            data = dataVal;\n          }\n        });\n        if (data != null) {\n          console.log(data.startDate != null);\n          if (data.startDate != null) {\n            setIsCheckIn(false);\n            const checkInDate = new Date(data.startDate);\n            setStartDate(checkInDate);\n            setCheckInTime(checkInDate.toLocaleTimeString()); // Format the time as a string\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              checkIn: checkInDate.toISOString()\n            }));\n          } else {\n            setCheckInTime(null);\n            const milliseconds = data.totalTime;\n            const hours = Math.floor(milliseconds / (1000 * 60 * 60));\n            const minutes = Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60));\n            const seconds = Math.floor(milliseconds % (1000 * 60) / 1000);\n            const formattedTime = `${hours}h ${minutes}m ${seconds}s`;\n            setTotalTime(formattedTime);\n            console.log(\"here\");\n          }\n        } else {\n          setHasData(false);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting start check-in data:', error);\n    }\n  };\n  const saveCheckInTime = async () => {\n    const currentDate = new Date();\n    console.log(currentDate);\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timesheet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: authToken\n        },\n        body: JSON.stringify({\n          startDate: currentDate\n        })\n      });\n\n      // Handle the response\n      if (response.ok) {\n        console.log('Check-in date saved successfully.');\n        // You can perform additional actions here if needed\n        refreshData(); // Refresh data after saving check-in time\n      } else {\n        console.error('Error saving check-in date:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error saving check-in date:', error);\n    }\n  };\n  const setCheckOutTime = async () => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timesheet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: authToken\n        },\n        body: JSON.stringify({\n          startDate: null,\n          totalTime: Date.now() - Date.parse(startDate)\n        })\n      });\n      console.log(Date.now() - Date.parse(startDate));\n      console.log(Date.parse(startDate));\n      // Handle the response\n      if (response.ok) {\n        console.log('Check-out date and time difference saved successfully.');\n        setIsCheckIn(true);\n        refreshData();\n        // You can perform additional actions here if needed\n      } else {\n        console.error('Error saving check-out date and time difference:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error saving check-out date and time difference:', error);\n    }\n  };\n  const checkIfSameAsCurrentDate = () => {\n    const currentDate = new Date();\n    // console.log(currentDate);\n    const monthNameToNumber = {\n      January: 0,\n      February: 1,\n      March: 2,\n      April: 3,\n      May: 4,\n      June: 5,\n      July: 6,\n      August: 7,\n      September: 8,\n      October: 9,\n      November: 10,\n      December: 11\n    };\n    const selectedDateObject = new Date(selectedDate.year, monthNameToNumber[selectedDate.month], selectedDate.day);\n    setIsSameAsCurrentDate(selectedDateObject.getFullYear() === currentDate.getFullYear() && selectedDateObject.getMonth() === currentDate.getMonth() && selectedDateObject.getDate() === currentDate.getDate());\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleToggleCheckInOut = () => {\n    if (!isSameAsCurrentDate) {\n      return; // Disable for dates other than the current date\n    }\n\n    console.log(isCheckIn);\n    if (isCheckIn) {\n      setIsCheckIn(false);\n    } else {\n      setIsCheckIn(true);\n    }\n    if (!isCheckIn) {\n      setCheckOutTime();\n      //getCheckInTime();\n    } else {\n      saveCheckInTime();\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\",\n    \"data-bs-theme\": \"light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"form-label\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold'\n            },\n            children: selectedDate ? `${selectedDate.day} ${selectedDate.month} ${selectedDate.year}` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"checkInTime\",\n            className: \"form-label\",\n            children: \"Check-in Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold'\n            },\n            children: !isCheckIn && hasData ? checkInTime : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"totalTime\",\n            className: \"form-label\",\n            children: \"Total Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold'\n            },\n            children: hasData ? totalTime : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleToggleCheckInOut,\n                className: `btn ${isCheckIn ? 'btn-primary' : 'btn-danger'} mb-2`,\n                disabled: !isSameAsCurrentDate // Disable for dates other than the current date\n                ,\n                children: isCheckIn ? 'Check-in' : 'Check-out'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"btn btn-link text-dark mb-2\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetForm, \"AwFpkqGCAzpukuTPIloojf9l+TE=\");\n_c = TimesheetForm;\nexport default TimesheetForm;\nvar _c;\n$RefreshReg$(_c, \"TimesheetForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TimesheetForm","selectedDate","onClose","_s","formData","setFormData","date","day","month","year","checkIn","checkOut","isCheckIn","setIsCheckIn","startDate","setStartDate","checkInTime","setCheckInTime","totalTime","setTotalTime","isSameAsCurrentDate","setIsSameAsCurrentDate","hasData","setHasData","refreshData","checkIfSameAsCurrentDate","getCheckInTime","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","monthNameToNumber","January","February","March","April","May","June","July","August","September","October","November","December","selectedDateObject","Date","data","ok","dataArray","timerData","forEach","dataVal","console","log","dataDate","selectedDateUTC","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","checkInDate","toLocaleTimeString","prevFormData","toISOString","milliseconds","hours","Math","floor","minutes","seconds","formattedTime","error","saveCheckInTime","currentDate","body","JSON","stringify","statusText","setCheckOutTime","now","parse","getFullYear","getMonth","getDate","handleInputChange","e","name","value","target","handleToggleCheckInOut","handleSubmit","preventDefault","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","fontWeight","type","onClick","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/Timesheet/timesheetFormAssets/timesheetForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst TimesheetForm = ({ selectedDate, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    date: selectedDate ? `${selectedDate.day} ${selectedDate.month} ${selectedDate.year}` : '',\r\n    checkIn: '',\r\n    checkOut: '',\r\n  });\r\n\r\n  const [isCheckIn, setIsCheckIn] = useState(true);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [checkInTime, setCheckInTime] = useState(null);\r\n  const [totalTime, setTotalTime] = useState(\"\");\r\n  const [isSameAsCurrentDate, setIsSameAsCurrentDate] = useState(false);\r\n  const [hasData, setHasData] = useState(true);\r\n  useEffect(() => {\r\n    // Fetch check-in time when the component mounts\r\n    refreshData();\r\n    checkIfSameAsCurrentDate();\r\n  }, [selectedDate]); // Trigger when selectedDate changes\r\n\r\n  const refreshData = async () => {\r\n    await getCheckInTime();\r\n    checkIfSameAsCurrentDate();\r\n  };\r\n\r\n  const getCheckInTime = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timesheet', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n\r\n      const monthNameToNumber = {\r\n        January: 0,\r\n        February: 1,\r\n        March: 2,\r\n        April: 3,\r\n        May: 4,\r\n        June: 5,\r\n        July: 6,\r\n        August: 7,\r\n        September: 8,\r\n        October: 9,\r\n        November: 10,\r\n        December: 11,\r\n      };\r\n  \r\n      const selectedDateObject = new Date(\r\n        selectedDate.year,\r\n        monthNameToNumber[selectedDate.month],\r\n        selectedDate.day\r\n      );\r\n      const data = null;\r\n      if (response.ok) {\r\n        dataArray.timerData.forEach(dataVal => {\r\n          console.log(dataVal.date);\r\n          const dataDate = new Date(dataVal.date);\r\n          console.log(dataDate); // Log the parsed date\r\n        \r\n          const selectedDateUTC = new Date(\r\n            Date.UTC(\r\n              selectedDateObject.getUTCFullYear(),\r\n              selectedDateObject.getUTCMonth(),\r\n              selectedDateObject.getUTCDate(),\r\n              selectedDateObject.getUTCHours(),\r\n              selectedDateObject.getUTCMinutes(),\r\n              selectedDateObject.getUTCSeconds(),\r\n              selectedDateObject.getUTCMilliseconds()\r\n            )\r\n          );\r\n        \r\n          if (\r\n            selectedDateUTC.getUTCFullYear() === dataDate.getUTCFullYear() &&\r\n            selectedDateUTC.getUTCMonth() === dataDate.getUTCMonth() &&\r\n            selectedDateUTC.getUTCDate() === dataDate.getUTCDate()\r\n          ) {\r\n            data = dataVal;\r\n          }\r\n        });\r\n        \r\n\r\n\r\n        if(data != null)\r\n        {\r\n          console.log(data.startDate != null);\r\n          if (data.startDate != null) {\r\n            setIsCheckIn(false);\r\n            const checkInDate = new Date(data.startDate);\r\n            setStartDate(checkInDate);\r\n            setCheckInTime(checkInDate.toLocaleTimeString()); // Format the time as a string\r\n            setFormData((prevFormData) => ({\r\n              ...prevFormData,\r\n              checkIn: checkInDate.toISOString(),\r\n          }));\r\n          } else {\r\n            setCheckInTime(null);\r\n            const milliseconds = data.totalTime;\r\n\r\n            const hours = Math.floor(milliseconds / (1000 * 60 * 60));\r\n            const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n            const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\r\n\r\n            const formattedTime = `${hours}h ${minutes}m ${seconds}s`;\r\n            setTotalTime(formattedTime);\r\n            console.log(\"here\");\r\n          }\r\n        }\r\n        else\r\n        {\r\n          setHasData(false);\r\n        }\r\n\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting start check-in data:', error);\r\n    }\r\n  };\r\n\r\n  const saveCheckInTime = async () => {\r\n    const currentDate = new Date();\r\n    console.log(currentDate);\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timesheet', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({\r\n          startDate: currentDate,\r\n        }),\r\n      });\r\n\r\n      // Handle the response\r\n      if (response.ok) {\r\n        console.log('Check-in date saved successfully.');\r\n        // You can perform additional actions here if needed\r\n        refreshData(); // Refresh data after saving check-in time\r\n      } else {\r\n        console.error('Error saving check-in date:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving check-in date:', error);\r\n    }\r\n  };\r\n\r\n  const setCheckOutTime = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timesheet', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({\r\n          startDate: null,\r\n          totalTime: Date.now() - Date.parse(startDate),\r\n        }),\r\n      });\r\n        console.log(Date.now() - Date.parse(startDate));\r\n        console.log(Date.parse(startDate));\r\n      // Handle the response\r\n      if (response.ok) {\r\n        console.log('Check-out date and time difference saved successfully.');\r\n        setIsCheckIn(true);\r\n        refreshData();\r\n        // You can perform additional actions here if needed\r\n      } else {\r\n        console.error('Error saving check-out date and time difference:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving check-out date and time difference:', error);\r\n    }\r\n  };\r\n\r\n  const checkIfSameAsCurrentDate = () => {\r\n    const currentDate = new Date();\r\n   // console.log(currentDate);\r\n    const monthNameToNumber = {\r\n      January: 0,\r\n      February: 1,\r\n      March: 2,\r\n      April: 3,\r\n      May: 4,\r\n      June: 5,\r\n      July: 6,\r\n      August: 7,\r\n      September: 8,\r\n      October: 9,\r\n      November: 10,\r\n      December: 11,\r\n    };\r\n\r\n    const selectedDateObject = new Date(\r\n      selectedDate.year,\r\n      monthNameToNumber[selectedDate.month],\r\n      selectedDate.day\r\n    );\r\n\r\n    setIsSameAsCurrentDate(\r\n      selectedDateObject.getFullYear() === currentDate.getFullYear() &&\r\n      selectedDateObject.getMonth() === currentDate.getMonth() &&\r\n      selectedDateObject.getDate() === currentDate.getDate()\r\n    );\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleToggleCheckInOut = () => {\r\n    if (!isSameAsCurrentDate) {\r\n      return; // Disable for dates other than the current date\r\n    }\r\n    console.log(isCheckIn);\r\n    if(isCheckIn)\r\n    {\r\n      setIsCheckIn(false);\r\n    }\r\n    else\r\n    {\r\n      setIsCheckIn(true);\r\n    }\r\n\r\n    if (!isCheckIn) {\r\n      \r\n      setCheckOutTime();\r\n      //getCheckInTime();\r\n    } else {\r\n      saveCheckInTime();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\" data-bs-theme=\"light\">\r\n      <div className=\"overlay\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"date\" className=\"form-label\">\r\n              Date:\r\n            </label>\r\n            <p className=\"mb-0\" style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>\r\n              {selectedDate ? `${selectedDate.day} ${selectedDate.month} ${selectedDate.year}` : ''}\r\n            </p>\r\n          </div>\r\n\r\n          {/* <div className=\"mb-3\">\r\n            <label htmlFor=\"checkIn\" className=\"form-label\">\r\n              {isCheckIn ? 'Check-in' : 'Check-out'}:\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              name={isCheckIn ? 'checkIn' : 'checkOut'}\r\n              value={checkInTime ? checkInTime : '00:00:000'}\r\n              onChange={handleInputChange}\r\n              className=\"form-control\"\r\n              required\r\n              disabled={!isSameAsCurrentDate} // Disable for dates other than the current date\r\n            />\r\n          </div> */}\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"checkInTime\" className=\"form-label\">\r\n              Check-in Time:\r\n            </label>\r\n            <p className=\"mb-0\" style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>\r\n              {!isCheckIn && hasData ? checkInTime : 'N/A'}\r\n            </p>\r\n          </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"totalTime\" className=\"form-label\">\r\n                Total Time:\r\n              </label>\r\n              <p className=\"mb-0\" style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>\r\n                {hasData ? totalTime : \"\"}\r\n              </p>\r\n            </div>\r\n\r\n          <div className=\"col text-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleToggleCheckInOut}\r\n                  className={`btn ${isCheckIn ? 'btn-primary' : 'btn-danger'} mb-2`}\r\n                  disabled={!isSameAsCurrentDate} // Disable for dates other than the current date\r\n                >\r\n                  {isCheckIn ? 'Check-in' : 'Check-out'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <a href=\"#\" className=\"btn btn-link text-dark mb-2\">\r\n                  Submit\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimesheetForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}