{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nexport default Timer();\n{\n  var _s = $RefreshSig$();\n  const Time = () => {\n    _s();\n    const [elapsedTime, setElapsedTime] = useState(0);\n    const [timerRunning, setTimerRunning] = useState(false);\n    const intervalRef = useRef(null);\n\n    // export default Timer;\n    const startTimer = () => {\n      if (!timerRunning) {\n        fetchTimerData(); // Fetch timer data when starting the timer\n        const startTime = Date.now() - elapsedTime;\n        setTimerRunning(true);\n        intervalRef.current = setInterval(() => {\n          const currentTime = Date.now();\n          const newElapsedTime = currentTime - startTime;\n          setElapsedTime(newElapsedTime);\n        }, 1000);\n      }\n    };\n    const saveTimerData = async elapsedTime => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        const response = await fetch('http://localhost:5000/timer', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${authToken}`\n          },\n          body: JSON.stringify({\n            elapsedTime\n          })\n        });\n\n        // Handle the response\n      } catch (error) {\n        console.error('Error saving timer data:', error);\n      }\n    };\n    const fetchTimerData = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        const response = await fetch('http://localhost:5000/timer', {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n\n        // Handle the response\n      } catch (error) {\n        console.error('Error fetching timer data:', error);\n      }\n    };\n  };\n  _s(Time, \"vka8dsLZeq914j8uut+PJjzE4sQ=\");\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","Timer","_s","$RefreshSig$","Time","elapsedTime","setElapsedTime","timerRunning","setTimerRunning","intervalRef","startTimer","fetchTimerData","startTime","Date","now","current","setInterval","currentTime","newElapsedTime","saveTimerData","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","error","console"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/timer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nexport default Timer();{\r\n    const Time = () => {\r\n    const [elapsedTime, setElapsedTime] = useState(0);\r\n    const [timerRunning, setTimerRunning] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    // export default Timer;\r\n    const startTimer = () => {\r\n        if (!timerRunning) {\r\n        fetchTimerData(); // Fetch timer data when starting the timer\r\n        const startTime = Date.now() - elapsedTime;\r\n        setTimerRunning(true);\r\n    \r\n        intervalRef.current = setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const newElapsedTime = currentTime - startTime;\r\n            setElapsedTime(newElapsedTime);\r\n        }, 1000);\r\n        }\r\n    };\r\n    \r\n    const saveTimerData = async (elapsedTime) => {\r\n        try {\r\n        const authToken = localStorage.getItem('authToken');\r\n    \r\n        const response = await fetch('http://localhost:5000/timer', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${authToken}`,\r\n            },\r\n            body: JSON.stringify({ elapsedTime }),\r\n        });\r\n    \r\n        // Handle the response\r\n        } catch (error) {\r\n        console.error('Error saving timer data:', error);\r\n        }\r\n    };\r\n    \r\n    const fetchTimerData = async () => {\r\n        try {\r\n        const authToken = localStorage.getItem('authToken');\r\n    \r\n        const response = await fetch('http://localhost:5000/timer', {\r\n            headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            },\r\n        });\r\n    \r\n        // Handle the response\r\n        } catch (error) {\r\n        console.error('Error fetching timer data:', error);\r\n        }\r\n    };\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,eAAeC,KAAK,CAAC,CAAC;AAAC;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;IAAAF,EAAA;IACnB,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;IACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;IACvD,MAAMW,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;;IAEhC;IACA,MAAMW,UAAU,GAAGA,CAAA,KAAM;MACrB,IAAI,CAACH,YAAY,EAAE;QACnBI,cAAc,CAAC,CAAC,CAAC,CAAC;QAClB,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGT,WAAW;QAC1CG,eAAe,CAAC,IAAI,CAAC;QAErBC,WAAW,CAACM,OAAO,GAAGC,WAAW,CAAC,MAAM;UACpC,MAAMC,WAAW,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC;UAC9B,MAAMI,cAAc,GAAGD,WAAW,GAAGL,SAAS;UAC9CN,cAAc,CAACY,cAAc,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC;MACR;IACJ,CAAC;IAED,MAAMC,aAAa,GAAG,MAAOd,WAAW,IAAK;MACzC,IAAI;QACJ,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAEnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UACxDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACT,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASP,SAAU;UACnC,CAAC;UACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEzB;UAAY,CAAC;QACxC,CAAC,CAAC;;QAEF;MACA,CAAC,CAAC,OAAO0B,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAED,MAAMpB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACJ,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAEnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UACxDE,OAAO,EAAE;YACTC,aAAa,EAAG,UAASP,SAAU;UACnC;QACJ,CAAC,CAAC;;QAEF;MACA,CAAC,CAAC,OAAOW,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;EACD,CAAC;EAAA7B,EAAA,CAtDKE,IAAI;AAuDd"},"metadata":{},"sourceType":"module","externalDependencies":[]}