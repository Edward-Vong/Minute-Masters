{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const intervalRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const authToken = localStorage.getItem('token');\n    if (!authToken) {\n      // Redirect to login if no token is present\n      navigate('/login');\n    } else {\n      fetchTimerData(); // Fetch timer data when the component mounts\n\n      // Add event listener for beforeunload to save data before leaving the page\n      window.addEventListener('beforeunload', handleBeforeUnload);\n      return () => {\n        // Cleanup the event listener when the component is unmounted\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      };\n    }\n  }, [navigate]);\n  const handleBeforeUnload = () => {\n    // Save timer data before leaving the page\n    console.log(elapsedTime);\n    saveTimerData(elapsedTime, timerRunning);\n  };\n  const startTimer = () => {\n    if (!timerRunning) {\n      const startTime = Date.now() - elapsedTime;\n      setTimerRunning(true);\n      intervalRef.current = setInterval(() => {\n        const currentTime = Date.now();\n        const newElapsedTime = currentTime - startTime;\n        setElapsedTime(newElapsedTime);\n      }, 1000);\n    }\n  };\n  const saveTimerData = async (elapsedTime, timerRunning) => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: authToken\n        },\n        body: JSON.stringify({\n          elapsedTime,\n          timeStopped: Boolean(timerRunning)\n        })\n      });\n\n      // Handle the response\n    } catch (error) {\n      console.error('Error saving timer data:', error);\n    }\n  };\n  const stopTimer = () => {\n    saveTimerData(elapsedTime, false);\n    setTimerRunning(false);\n    clearInterval(intervalRef.current);\n  };\n  const displayTime = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const fetchTimerData = async () => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timer', {\n        method: 'GET',\n        headers: {\n          Authorization: authToken\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.timer.timeStopped) {\n          setTimerRunning(true);\n          setElapsedTime(data.timer.date - data.timer.elapsedTime);\n        } else {\n          setElapsedTime(data.timer.elapsedTime);\n        }\n      } else {\n        console.error('Error fetching timer data:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching timer data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTimer,\n      children: \"Start Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopTimer,\n      children: \"Stop Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Reset Timer for Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"timerDisplay\",\n      children: [\"Timer: \", displayTime(elapsedTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"Wglpk9YLc2yXqgdwMQAdlffgthM=\", false, function () {\n  return [useNavigate];\n});\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Timer","_s","elapsedTime","setElapsedTime","timerRunning","setTimerRunning","intervalRef","navigate","authToken","localStorage","getItem","fetchTimerData","window","addEventListener","handleBeforeUnload","removeEventListener","console","log","saveTimerData","startTimer","startTime","Date","now","current","setInterval","currentTime","newElapsedTime","response","fetch","method","headers","Authorization","body","JSON","stringify","timeStopped","Boolean","error","stopTimer","clearInterval","displayTime","milliseconds","totalSeconds","Math","floor","hours","minutes","seconds","toString","padStart","ok","data","json","timer","date","status","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/timer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Timer() {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem('token');\r\n\r\n    if (!authToken) {\r\n      // Redirect to login if no token is present\r\n      navigate('/login');\r\n    } else {\r\n      fetchTimerData(); // Fetch timer data when the component mounts\r\n\r\n      // Add event listener for beforeunload to save data before leaving the page\r\n      window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n      return () => {\r\n        // Cleanup the event listener when the component is unmounted\r\n        window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      };\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleBeforeUnload = () => {\r\n    // Save timer data before leaving the page\r\n    console.log(elapsedTime);\r\n    saveTimerData(elapsedTime, timerRunning);\r\n  };\r\n\r\n  const startTimer = () => {\r\n    if (!timerRunning) {\r\n      const startTime = Date.now() - elapsedTime;\r\n      setTimerRunning(true);\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const newElapsedTime = currentTime - startTime;\r\n        setElapsedTime(newElapsedTime);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const saveTimerData = async (elapsedTime, timerRunning) => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({ elapsedTime, timeStopped: Boolean(timerRunning) }),\r\n      });\r\n\r\n      // Handle the response\r\n    } catch (error) {\r\n      console.error('Error saving timer data:', error);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    saveTimerData(elapsedTime, false);\r\n    setTimerRunning(false);\r\n    clearInterval(intervalRef.current);\r\n  };\r\n\r\n  const displayTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const fetchTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.timer.timeStopped) {\r\n          setTimerRunning(true);\r\n          setElapsedTime(data.timer.date - data.timer.elapsedTime);\r\n        } else {\r\n          setElapsedTime(data.timer.elapsedTime);\r\n        }\r\n      } else {\r\n        console.error('Error fetching timer data:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching timer data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startTimer}>Start Timer</button>\r\n      <button onClick={stopTimer}>Stop Timer</button>\r\n      <button>Reset Timer for Today</button>\r\n      <p id=\"timerDisplay\">Timer: {displayTime(elapsedTime)}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE/C,IAAI,CAACF,SAAS,EAAE;MACd;MACAD,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLI,cAAc,CAAC,CAAC,CAAC,CAAC;;MAElB;MACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEC,kBAAkB,CAAC;MAE3D,OAAO,MAAM;QACX;QACAF,MAAM,CAACG,mBAAmB,CAAC,cAAc,EAAED,kBAAkB,CAAC;MAChE,CAAC;IACH;EACF,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAE,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC;IACxBgB,aAAa,CAAChB,WAAW,EAAEE,YAAY,CAAC;EAC1C,CAAC;EAED,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACf,YAAY,EAAE;MACjB,MAAMgB,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGpB,WAAW;MAC1CG,eAAe,CAAC,IAAI,CAAC;MAErBC,WAAW,CAACiB,OAAO,GAAGC,WAAW,CAAC,MAAM;QACtC,MAAMC,WAAW,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9B,MAAMI,cAAc,GAAGD,WAAW,GAAGL,SAAS;QAC9CjB,cAAc,CAACuB,cAAc,CAAC;MAChC,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMR,aAAa,GAAG,MAAAA,CAAOhB,WAAW,EAAEE,YAAY,KAAK;IACzD,IAAI;MACF,MAAMI,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC/C,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAEvB;QACjB,CAAC;QACDwB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhC,WAAW;UAAEiC,WAAW,EAAEC,OAAO,CAAChC,YAAY;QAAE,CAAC;MAC1E,CAAC,CAAC;;MAEF;IACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBpB,aAAa,CAAChB,WAAW,EAAE,KAAK,CAAC;IACjCG,eAAe,CAAC,KAAK,CAAC;IACtBkC,aAAa,CAACjC,WAAW,CAACiB,OAAO,CAAC;EACpC,CAAC;EAED,MAAMiB,WAAW,GAAIC,YAAY,IAAK;IACpC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,GAAG,IAAI,CAAC;IACpD,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACF,YAAY,GAAG,IAAI,CAAC;IAC7C,MAAMI,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEF,YAAY,GAAG,IAAI,GAAI,EAAE,CAAC;IACtD,MAAMK,OAAO,GAAGL,YAAY,GAAG,EAAE;IAEjC,OAAQ,GAAEG,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGH,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGF,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAC7H,CAAC;EAED,MAAMtC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMH,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC/C,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAEvB;QACjB;MACF,CAAC,CAAC;MAEF,IAAImB,QAAQ,CAACuB,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMxB,QAAQ,CAACyB,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,KAAK,CAAClB,WAAW,EAAE;UAC1B9B,eAAe,CAAC,IAAI,CAAC;UACrBF,cAAc,CAACgD,IAAI,CAACE,KAAK,CAACC,IAAI,GAAGH,IAAI,CAACE,KAAK,CAACnD,WAAW,CAAC;QAC1D,CAAC,MAAM;UACLC,cAAc,CAACgD,IAAI,CAACE,KAAK,CAACnD,WAAW,CAAC;QACxC;MACF,CAAC,MAAM;QACLc,OAAO,CAACqB,KAAK,CAAC,4BAA4B,EAAEV,QAAQ,CAAC4B,MAAM,CAAC;MAC9D;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEtC,OAAA;IAAAyD,QAAA,gBACEzD,OAAA;MAAQ0D,OAAO,EAAEtC,UAAW;MAAAqC,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjD9D,OAAA;MAAQ0D,OAAO,EAAEnB,SAAU;MAAAkB,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C9D,OAAA;MAAAyD,QAAA,EAAQ;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtC9D,OAAA;MAAG+D,EAAE,EAAC,cAAc;MAAAN,QAAA,GAAC,SAAO,EAAChB,WAAW,CAACtC,WAAW,CAAC;IAAA;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC5D,EAAA,CA/GuBD,KAAK;EAAA,QAIVH,WAAW;AAAA;AAAAkE,EAAA,GAJN/D,KAAK;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}