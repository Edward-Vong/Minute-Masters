{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\CreateGroup\\\\manageGroupAssets\\\\nameList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NameList = () => {\n  _s();\n  const [initialNames, setInitialNames] = useState([]);\n  const [names, setNames] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const getNames = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/listName', {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        if (response.ok) {\n          const groupData = await response.json();\n          setInitialNames(groupData.members);\n          setNames(groupData.members); // Set both initial and current names\n        } else {\n          console.error('Error fetching group data:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching group data:', error.message);\n      }\n    };\n    getNames();\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  const handleDelete = index => {\n    // Create a copy of the names array\n    const updatedNames = [...names];\n    // Remove the name at the specified index\n    updatedNames.splice(index, 1);\n    // Update the state with the new array\n    setNames(updatedNames);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: \"Name List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      style: {\n        marginBottom: '30px'\n      },\n      children: names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDelete(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(NameList, \"EyGlezfuB0TP2AeD8CX423WFwYA=\");\n_c = NameList;\nexport default NameList;\nvar _c;\n$RefreshReg$(_c, \"NameList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NameList","_s","initialNames","setInitialNames","names","setNames","user","setUser","getNames","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","groupData","json","members","console","error","statusText","message","handleDelete","index","updatedNames","splice","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","map","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/CreateGroup/manageGroupAssets/nameList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst NameList = () => {\r\n  const [initialNames, setInitialNames] = useState([]);\r\n  const [names, setNames] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n\r\n    const getNames = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('http://localhost:5000/listName', {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const groupData = await response.json();\r\n          setInitialNames(groupData.members);\r\n          setNames(groupData.members); // Set both initial and current names\r\n        } else {\r\n          console.error('Error fetching group data:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching group data:', error.message);\r\n      }\r\n    };\r\n\r\n    getNames();\r\n  }, []); // Empty dependency array to run the effect only once on mount\r\n\r\n  const handleDelete = (index) => {\r\n    // Create a copy of the names array\r\n    const updatedNames = [...names];\r\n    // Remove the name at the specified index\r\n    updatedNames.splice(index, 1);\r\n    // Update the state with the new array\r\n    setNames(updatedNames);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 style={{ marginTop: '30px' }}>Name List</h2>\r\n      <ul className=\"list-group\" style={{ marginBottom: '30px' }}>\r\n        {names.map((name, index) => (\r\n          <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            {name}\r\n            <button className=\"btn btn-danger\" onClick={() => handleDelete(index)}>\r\n              Remove\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}