{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Edward\\\\Documents\\\\School\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\Timesheet\\\\calendarAssets\\\\calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./weekday.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const currentYear = new Date().getFullYear();\n  const [activeMonth, setActiveMonth] = useState(\"December\"); // Initial active month\n  const [activeYear, setActiveYear] = useState(currentYear); // Initial active year\n\n  const handleMonthChange = event => {\n    setActiveMonth(event.target.value);\n  };\n  const handleYearChange = event => {\n    setActiveYear(parseInt(event.target.value, 10));\n  };\n  const getDaysInMonth = (month, year) => {\n    const firstDayOfMonth = new Date(year, months.indexOf(month), 1).getDay();\n    const daysInMonth = new Date(year, months.indexOf(month) + 1, 0).getDate();\n    const daysInPreviousMonth = new Date(year, months.indexOf(month), 0).getDate();\n    const leadingEmptyDays = firstDayOfMonth % 7;\n    const previousMonthDays = Array.from({\n      length: leadingEmptyDays\n    }, (_, i) => daysInPreviousMonth - leadingEmptyDays + i + 1);\n    const currentMonthDays = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    const totalDays = previousMonthDays.concat(currentMonthDays);\n    return totalDays;\n  };\n  const daysInMonth = getDaysInMonth(activeMonth, activeYear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\",\n    \"data-bs-theme\": \"light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid gap-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-month\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"bi\",\n              width: \"16\",\n              height: \"16\",\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: \"#arrow-left-short\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"cal-month-name\",\n            children: `${activeMonth} ${activeYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select cal-month-name\",\n            value: activeMonth,\n            onChange: handleMonthChange,\n            children: months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control cal-year-input\",\n            value: activeYear,\n            onChange: handleYearChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"bi\",\n              width: \"16\",\n              height: \"16\",\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: \"#arrow-right-short\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekdays text-body-secondary\",\n          children: daysOfWeek.map(weekday => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cal-weekday\",\n            children: weekday\n          }, weekday, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-days\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn cal-btn ${day === '' ? 'disabled' : ''}`,\n            type: \"button\",\n            disabled: day === '' // Disable the button if it's from the previous month\n            ,\n            onClick: () => handleDayClick(day) // Add your click handler here\n            ,\n            children: day\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), \"))}\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"D9ImOfZP/wXhuiBRAsFXPXDoYDA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","daysOfWeek","months","currentYear","Date","getFullYear","activeMonth","setActiveMonth","activeYear","setActiveYear","handleMonthChange","event","target","value","handleYearChange","parseInt","getDaysInMonth","month","year","firstDayOfMonth","indexOf","getDay","daysInMonth","getDate","daysInPreviousMonth","leadingEmptyDays","previousMonthDays","Array","from","length","_","i","currentMonthDays","totalDays","concat","className","children","type","width","height","href","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","weekday","day","disabled","onClick","handleDayClick","index","_c","$RefreshReg$"],"sources":["C:/Users/Edward/Documents/School/Minute-Masters/client/src/components/Timesheet/calendarAssets/calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./weekday.css\";\r\n\r\nconst Calendar = () => {\r\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\",\r\n    \"May\", \"June\", \"July\", \"August\",\r\n    \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const [activeMonth, setActiveMonth] = useState(\"December\"); // Initial active month\r\n  const [activeYear, setActiveYear] = useState(currentYear); // Initial active year\r\n\r\n  const handleMonthChange = (event) => {\r\n    setActiveMonth(event.target.value);\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setActiveYear(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const getDaysInMonth = (month, year) => {\r\n    const firstDayOfMonth = new Date(year, months.indexOf(month), 1).getDay();\r\n    const daysInMonth = new Date(year, months.indexOf(month) + 1, 0).getDate();\r\n    const daysInPreviousMonth = new Date(year, months.indexOf(month), 0).getDate();\r\n    \r\n    const leadingEmptyDays = (firstDayOfMonth) % 7;\r\n\r\n    const previousMonthDays = Array.from({ length: leadingEmptyDays }, (_, i) => daysInPreviousMonth - leadingEmptyDays + i + 1);\r\n    const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n\r\n    const totalDays = previousMonthDays.concat(currentMonthDays);\r\n\r\n    return totalDays;\r\n  };\r\n\r\n  const daysInMonth = getDaysInMonth(activeMonth, activeYear);\r\n\r\n  return (\r\n    <div className=\"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\" data-bs-theme=\"light\">\r\n      <div className=\"d-grid gap-1\">\r\n        <div className=\"cal\">\r\n          <div className=\"cal-month\">\r\n            \r\n            {/* Month navigation buttons */}\r\n            <button className=\"btn\" type=\"button\">\r\n              <svg className=\"bi\" width=\"16\" height=\"16\"><use href=\"#arrow-left-short\"></use></svg>\r\n            </button>\r\n            <strong className=\"cal-month-name\">{`${activeMonth} ${activeYear}`}</strong>\r\n            {/* Month selection dropdown */}\r\n            <select className=\"form-select cal-month-name\" value={activeMonth} onChange={handleMonthChange}>\r\n              {months.map((month) => (\r\n                <option key={month} value={month}>{month}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Year selection input */}\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control cal-year-input\"\r\n              value={activeYear}\r\n              onChange={handleYearChange}\r\n            />\r\n            <button className=\"btn\" type=\"button\">\r\n              <svg className=\"bi\" width=\"16\" height=\"16\"><use href=\"#arrow-right-short\"></use></svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Weekdays */}\r\n          <div className=\"cal-weekdays text-body-secondary\">\r\n            {daysOfWeek.map((weekday) => (\r\n              <div key={weekday} className=\"cal-weekday\">{weekday}</div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Days */}\r\n          <div className=\"cal-days\">\r\n          <button\r\n                key={index}\r\n                className={`btn cal-btn ${day === '' ? 'disabled' : ''}`}\r\n                type=\"button\"\r\n                disabled={day === ''}  // Disable the button if it's from the previous month\r\n                onClick={() => handleDayClick(day)}  // Add your click handler here\r\n              >\r\n                {day}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}