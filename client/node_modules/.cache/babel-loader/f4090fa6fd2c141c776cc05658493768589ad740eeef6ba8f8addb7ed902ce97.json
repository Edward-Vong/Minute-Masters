{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\Timesheet\\\\timesheetFormAssets\\\\timesheetForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetForm = ({\n  selectedDate,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: selectedDate ? `${selectedDate.month} ${selectedDate.day}, ${selectedDate.year}` : '',\n    checkIn: '',\n    // Changed to be a timestamp for easier time difference calculations\n    checkOut: ''\n  });\n  const [isCheckIn, setIsCheckIn] = useState(true);\n  useEffect(() => {\n    // Fetch check-in time when the component mounts\n    getCheckInTime();\n  }, []);\n  const getCheckInTime = async () => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timesheet', {\n        method: 'GET',\n        headers: {\n          Authorization: authToken\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.startDate != null) {\n          // Convert the start date to a timestamp for better handling\n          setFormData(prevFormData => ({\n            ...prevFormData,\n            checkIn: new Date(data.startDate).toISOString()\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error getting start check-in data:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleToggleCheckInOut = () => {\n    // Toggle between check-in and check-out modes\n    setIsCheckIn(prevIsCheckIn => !prevIsCheckIn);\n\n    // If checking out, update checkOut time\n    if (!isCheckIn) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        checkOut: new Date().toISOString()\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add logic to handle form submission, e.g., send data to the server or update state\n    console.log(formData);\n\n    // Calculate and log the time difference if checking out\n    if (!isCheckIn) {\n      const checkInTime = new Date(formData.checkIn);\n      const checkOutTime = new Date(formData.checkOut);\n      const timeDifference = checkOutTime - checkInTime;\n      console.log(`Time difference: ${timeDifference} milliseconds`);\n      // Add logic to save the time difference to the server or update state\n    }\n\n    onClose(); // Close the form after submission\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\",\n    \"data-bs-theme\": \"light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"checkIn\",\n            className: \"form-label\",\n            children: [isCheckIn ? 'Check-in' : 'Check-out', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: isCheckIn ? 'checkIn' : 'checkOut',\n            value: isCheckIn ? formData.checkIn.slice(11, 16) : formData.checkOut.slice(11, 16),\n            onChange: handleInputChange,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetForm, \"cjzvrRlsZZlJtTjf5BWWfP9GF9o=\");\n_c = TimesheetForm;\nexport default TimesheetForm;\nvar _c;\n$RefreshReg$(_c, \"TimesheetForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TimesheetForm","selectedDate","onClose","_s","formData","setFormData","date","month","day","year","checkIn","checkOut","isCheckIn","setIsCheckIn","getCheckInTime","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","ok","data","json","startDate","prevFormData","Date","toISOString","error","console","handleInputChange","e","name","value","target","handleToggleCheckInOut","prevIsCheckIn","handleSubmit","preventDefault","log","checkInTime","checkOutTime","timeDifference","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","slice","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/Timesheet/timesheetFormAssets/timesheetForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst TimesheetForm = ({ selectedDate, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    date: selectedDate ? `${selectedDate.month} ${selectedDate.day}, ${selectedDate.year}` : '',\r\n    checkIn: '', // Changed to be a timestamp for easier time difference calculations\r\n    checkOut: '',\r\n  });\r\n\r\n  const [isCheckIn, setIsCheckIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch check-in time when the component mounts\r\n    getCheckInTime();\r\n  }, []);\r\n\r\n  const getCheckInTime = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timesheet', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.startDate != null) {\r\n          // Convert the start date to a timestamp for better handling\r\n          setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            checkIn: new Date(data.startDate).toISOString(),\r\n          }));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting start check-in data:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleToggleCheckInOut = () => {\r\n    // Toggle between check-in and check-out modes\r\n    setIsCheckIn((prevIsCheckIn) => !prevIsCheckIn);\r\n\r\n    // If checking out, update checkOut time\r\n    if (!isCheckIn) {\r\n      setFormData((prevFormData) => ({\r\n        ...prevFormData,\r\n        checkOut: new Date().toISOString(),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add logic to handle form submission, e.g., send data to the server or update state\r\n    console.log(formData);\r\n\r\n    // Calculate and log the time difference if checking out\r\n    if (!isCheckIn) {\r\n      const checkInTime = new Date(formData.checkIn);\r\n      const checkOutTime = new Date(formData.checkOut);\r\n      const timeDifference = checkOutTime - checkInTime;\r\n      console.log(`Time difference: ${timeDifference} milliseconds`);\r\n      // Add logic to save the time difference to the server or update state\r\n    }\r\n\r\n    onClose(); // Close the form after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\" data-bs-theme=\"light\">\r\n      <div className=\"overlay\">\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ... (unchanged code) */}\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"checkIn\" className=\"form-label\">\r\n              {isCheckIn ? 'Check-in' : 'Check-out'}:\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              name={isCheckIn ? 'checkIn' : 'checkOut'}\r\n              value={isCheckIn ? formData.checkIn.slice(11, 16) : formData.checkOut.slice(11, 16)}\r\n              onChange={handleInputChange}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n          {/* ... (unchanged code) */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimesheetForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}