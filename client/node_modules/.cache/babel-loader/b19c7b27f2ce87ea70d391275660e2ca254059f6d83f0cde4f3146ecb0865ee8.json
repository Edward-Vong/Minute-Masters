{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tepig\\\\Desktop\\\\CMPE_133\\\\Minute-Masters-1\\\\client\\\\src\\\\components\\\\ViewGroup\\\\viewgroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewGroup = () => {\n  _s();\n  const [isPartOfGroup, setIsPartOfGroup] = useState(false);\n  const [groupMembers, setGroupMembers] = useState([]);\n  useEffect(() => {\n    // Fetch group information for the logged-in user from the backend\n    async function fetchGroupInfo() {\n      try {\n        // Make an API call to get group information for the logged-in user\n        const response = await fetch(\"/api/user/groupinfo\", {\n          // Add necessary headers and authentication token if needed\n        });\n        const data = await response.json();\n        if (data.group && data.group.members) {\n          setGroupMembers(data.group.members);\n          setIsPartOfGroup(true);\n        }\n      } catch (error) {\n        console.error(\"Error fetching group information:\", error);\n      }\n    }\n    fetchGroupInfo();\n  }, []); // Fetch group information on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isPartOfGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are part of this group.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Group Members:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groupMembers.map((member, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: member.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not currently part of any group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewGroup, \"kzQFsl4CxBLeXwGOfHi3BaYTtR4=\");\n_c = ViewGroup;\nexport default ViewGroup;\nvar _c;\n$RefreshReg$(_c, \"ViewGroup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ViewGroup","_s","isPartOfGroup","setIsPartOfGroup","groupMembers","setGroupMembers","fetchGroupInfo","response","fetch","data","json","group","members","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","member","index","name","_c","$RefreshReg$"],"sources":["C:/Users/tepig/Desktop/CMPE_133/Minute-Masters-1/client/src/components/ViewGroup/viewgroup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst ViewGroup = () => {\r\n  const [isPartOfGroup, setIsPartOfGroup] = useState(false);\r\n  const [groupMembers, setGroupMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch group information for the logged-in user from the backend\r\n    async function fetchGroupInfo() {\r\n      try {\r\n        // Make an API call to get group information for the logged-in user\r\n        const response = await fetch(\"/api/user/groupinfo\", {\r\n          // Add necessary headers and authentication token if needed\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.group && data.group.members) {\r\n          setGroupMembers(data.group.members);\r\n          setIsPartOfGroup(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching group information:\", error);\r\n      }\r\n    }\r\n\r\n    fetchGroupInfo();\r\n  }, []); // Fetch group information on component mount\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Group View</h1>\r\n      {isPartOfGroup ? (\r\n        <div>\r\n          <p>You are part of this group.</p>\r\n          <h2>Group Members:</h2>\r\n          <ul>\r\n            {groupMembers.map((member, index) => (\r\n              <li key={index}>{member.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>You are not currently part of any group.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,eAAeS,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;UAClD;QAAA,CACD,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,OAAO,EAAE;UACpCP,eAAe,CAACI,IAAI,CAACE,KAAK,CAACC,OAAO,CAAC;UACnCT,gBAAgB,CAAC,IAAI,CAAC;QACxB;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF;IAEAP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBlB,aAAa,gBACZH,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCrB,OAAA;QAAAiB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBrB,OAAA;QAAAiB,QAAA,EACGZ,YAAY,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BxB,OAAA;UAAAiB,QAAA,EAAiBM,MAAM,CAACE;QAAI,GAAnBD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAENrB,OAAA;MAAAiB,QAAA,EAAG;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA5CID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}