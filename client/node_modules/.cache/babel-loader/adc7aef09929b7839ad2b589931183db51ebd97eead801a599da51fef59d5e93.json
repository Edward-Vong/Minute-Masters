{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const intervalRef = useRef(null);\n\n  // export default Timer;\n  const startTimer = () => {\n    if (!timerRunning) {\n      fetchTimerData(); // Fetch timer data when starting the timer\n      const startTime = Date.now() - elapsedTime;\n      setTimerRunning(true);\n      intervalRef.current = setInterval(() => {\n        const currentTime = Date.now();\n        const newElapsedTime = currentTime - startTime;\n        setElapsedTime(newElapsedTime);\n      }, 1000);\n    }\n  };\n  const saveTimerData = async elapsedTime => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          elapsedTime\n        })\n      });\n\n      // Handle the response\n    } catch (error) {\n      console.error('Error saving timer data:', error);\n    }\n  };\n  const stopTimer = () => {\n    setTimerRunning(false);\n    clearInterval(intervalRef.current);\n\n    // Save timer data when stopping the timer\n    saveTimerData(elapsedTime);\n  };\n  const displayTime = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const fetchTimerData = async () => {\n    try {\n      const authToken = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/timer', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n\n      // Handle the response\n    } catch (error) {\n      console.error('Error fetching timer data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTimer,\n      children: \"Start Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopTimer,\n      children: \"Stop Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"timerDisplay\",\n      children: [\"Timer: \", displayTime(elapsedTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"vka8dsLZeq914j8uut+PJjzE4sQ=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Timer","_s","elapsedTime","setElapsedTime","timerRunning","setTimerRunning","intervalRef","startTimer","fetchTimerData","startTime","Date","now","current","setInterval","currentTime","newElapsedTime","saveTimerData","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","error","console","stopTimer","clearInterval","displayTime","milliseconds","totalSeconds","Math","floor","hours","minutes","seconds","toString","padStart","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/timer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nexport default function Timer(){\r\n    const [elapsedTime, setElapsedTime] = useState(0);\r\n    const [timerRunning, setTimerRunning] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    // export default Timer;\r\n    const startTimer = () => {\r\n        if (!timerRunning) {\r\n        fetchTimerData(); // Fetch timer data when starting the timer\r\n        const startTime = Date.now() - elapsedTime;\r\n        setTimerRunning(true);\r\n    \r\n        intervalRef.current = setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const newElapsedTime = currentTime - startTime;\r\n            setElapsedTime(newElapsedTime);\r\n        }, 1000);\r\n        }\r\n    };\r\n    \r\n    const saveTimerData = async (elapsedTime) => {\r\n        try {\r\n        const authToken = localStorage.getItem('token');\r\n    \r\n        const response = await fetch('http://localhost:5000/timer', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${authToken}`,\r\n            },\r\n            body: JSON.stringify({ elapsedTime }),\r\n        });\r\n    \r\n        // Handle the response\r\n        } catch (error) {\r\n        console.error('Error saving timer data:', error);\r\n        }\r\n    };\r\n    const stopTimer = () => {\r\n        setTimerRunning(false);\r\n        clearInterval(intervalRef.current);\r\n    \r\n        // Save timer data when stopping the timer\r\n        saveTimerData(elapsedTime);\r\n      };\r\n      const displayTime = (milliseconds) => {\r\n        const totalSeconds = Math.floor(milliseconds / 1000);\r\n        const hours = Math.floor(totalSeconds / 3600);\r\n        const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n        const seconds = totalSeconds % 60;\r\n    \r\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n      };\r\n    const fetchTimerData = async () => {\r\n        try {\r\n        const authToken = localStorage.getItem('token');\r\n    \r\n        const response = await fetch('http://localhost:5000/timer', {\r\n            method: 'GET',\r\n            headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            },\r\n        });\r\n    \r\n        // Handle the response\r\n        } catch (error) {\r\n        console.error('Error fetching timer data:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n          <button onClick={startTimer}>Start Timer</button>\r\n          <button onClick={stopTimer}>Stop Timer</button>\r\n          <p id=\"timerDisplay\">Timer: {displayTime(elapsedTime)}</p>\r\n        </div>\r\n      );\r\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}