{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst CalendarSupport = () => {\n  _s();\n  ret;\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const currentYear = new Date().getFullYear();\n  const [activeMonth, setActiveMonth] = useState(\"December\"); // Initial active month\n  const [activeYear, setActiveYear] = useState(currentYear); // Initial active year\n\n  const handleMonthChange = event => {\n    setActiveMonth(event.target.value);\n  };\n  const handleYearChange = event => {\n    setActiveYear(parseInt(event.target.value, 10));\n  };\n  const getDaysInMonth = (month, year) => {\n    const firstDayOfMonth = new Date(year, months.indexOf(month), 1).getDay();\n    const daysInMonth = new Date(year, months.indexOf(month) + 1, 0).getDate();\n    const leadingEmptyDays = firstDayOfMonth % 7; // Adjust to start from Sunday\n\n    // Calculate trailing (ending) empty days\n    const lastDayOfMonth = new Date(year, months.indexOf(month) + 1, 0).getDay();\n    const endingEmptyDays = (6 - lastDayOfMonth) % 7;\n    const prevMonthLastDate = new Date(year, months.indexOf(month), 0).getDate();\n\n    // Generate arrays for the days of the previous month, current month, and next month\n    const prevMonthDays = Array.from({\n      length: leadingEmptyDays\n    }, (_, i) => prevMonthLastDate - leadingEmptyDays + i + 1);\n    const currentMonthDays = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    const nextMonthDays = Array.from({\n      length: endingEmptyDays\n    }, (_, i) => i + 1);\n\n    // Combine all arrays to get the total array of days\n    const totalDays = prevMonthDays.concat(currentMonthDays, nextMonthDays);\n    return totalDays;\n  };\n  const handlePrevMonth = () => {\n    const currentIndex = months.indexOf(activeMonth);\n    const newMonth = currentIndex === 0 ? months[11] : months[currentIndex - 1];\n    const newYear = currentIndex === 0 ? activeYear - 1 : activeYear;\n    setActiveMonth(newMonth);\n    setActiveYear(newYear);\n  };\n  const handleNextMonth = () => {\n    const currentIndex = months.indexOf(activeMonth);\n    const newMonth = currentIndex === 11 ? months[0] : months[currentIndex + 1];\n    const newYear = currentIndex === 11 ? activeYear + 1 : activeYear;\n    setActiveMonth(newMonth);\n    setActiveYear(newYear);\n  };\n  const daysInMonth = getDaysInMonth(activeMonth, activeYear);\n  let oneCount = 0;\n};\n_s(CalendarSupport, \"D9ImOfZP/wXhuiBRAsFXPXDoYDA=\");\n_c = CalendarSupport;\nexport default CalendarSupport;\nvar _c;\n$RefreshReg$(_c, \"CalendarSupport\");","map":{"version":3,"names":["useState","CalendarSupport","_s","ret","daysOfWeek","months","currentYear","Date","getFullYear","activeMonth","setActiveMonth","activeYear","setActiveYear","handleMonthChange","event","target","value","handleYearChange","parseInt","getDaysInMonth","month","year","firstDayOfMonth","indexOf","getDay","daysInMonth","getDate","leadingEmptyDays","lastDayOfMonth","endingEmptyDays","prevMonthLastDate","prevMonthDays","Array","from","length","_","i","currentMonthDays","nextMonthDays","totalDays","concat","handlePrevMonth","currentIndex","newMonth","newYear","handleNextMonth","oneCount","_c","$RefreshReg$"],"sources":["C:/Users/Edward/Documents/School/Minute-Masters/client/src/components/Timesheet/calendarAssets/calendarSupp.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst CalendarSupport = () => {\r\n    ret\r\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\",\r\n    \"May\", \"June\", \"July\", \"August\",\r\n    \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const [activeMonth, setActiveMonth] = useState(\"December\"); // Initial active month\r\n  const [activeYear, setActiveYear] = useState(currentYear); // Initial active year\r\n\r\n  const handleMonthChange = (event) => {\r\n    setActiveMonth(event.target.value);\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setActiveYear(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const getDaysInMonth = (month, year) => {\r\n    const firstDayOfMonth = new Date(year, months.indexOf(month), 1).getDay();\r\n    const daysInMonth = new Date(year, months.indexOf(month) + 1, 0).getDate();\r\n  \r\n    const leadingEmptyDays = (firstDayOfMonth) % 7; // Adjust to start from Sunday\r\n  \r\n    // Calculate trailing (ending) empty days\r\n    const lastDayOfMonth = new Date(year, months.indexOf(month) + 1, 0).getDay();\r\n    const endingEmptyDays = (6 - lastDayOfMonth) % 7;\r\n  \r\n    const prevMonthLastDate = new Date(year, months.indexOf(month), 0).getDate();\r\n  \r\n    // Generate arrays for the days of the previous month, current month, and next month\r\n    const prevMonthDays = Array.from({ length: leadingEmptyDays }, (_, i) => prevMonthLastDate - leadingEmptyDays + i + 1);\r\n    const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    const nextMonthDays = Array.from({ length: endingEmptyDays }, (_, i) => i + 1);\r\n  \r\n    // Combine all arrays to get the total array of days\r\n    const totalDays = prevMonthDays.concat(currentMonthDays, nextMonthDays);\r\n  \r\n    return totalDays;\r\n  };\r\n\r\n  const handlePrevMonth = () => {\r\n    const currentIndex = months.indexOf(activeMonth);\r\n    const newMonth = currentIndex === 0 ? months[11] : months[currentIndex - 1];\r\n    const newYear = currentIndex === 0 ? activeYear - 1 : activeYear;\r\n  \r\n    setActiveMonth(newMonth);\r\n    setActiveYear(newYear);\r\n  };\r\n  \r\n  const handleNextMonth = () => {\r\n    const currentIndex = months.indexOf(activeMonth);\r\n    const newMonth = currentIndex === 11 ? months[0] : months[currentIndex + 1];\r\n    const newYear = currentIndex === 11 ? activeYear + 1 : activeYear;\r\n  \r\n    setActiveMonth(newMonth);\r\n    setActiveYear(newYear);\r\n  };\r\n\r\n  const daysInMonth = getDaysInMonth(activeMonth, activeYear);\r\n\r\n  let oneCount = 0;\r\n\r\n};\r\nexport default CalendarSupport;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}