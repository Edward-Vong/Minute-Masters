{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaol\\\\Desktop\\\\Minute-Masters\\\\client\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React from \"react\";\n\n// // We import bootstrap to make our application look better.\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import { Link } from \"react-router-dom\";\n\n// // Here, we display our Navbar\n// export default function Navbar() {\n//  return (\n//   <nav class=\"navbar navbar-expand-lg bg-body-tertiary rounded\" aria-label=\"Thirteenth navbar example\">\n//   <div class=\"container-fluid\">\n//     <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarsExample11\" aria-controls=\"navbarsExample11\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n//       <span class=\"navbar-toggler-icon\"></span>\n//     </button>\n\n//     <div class=\"collapse navbar-collapse d-lg-flex\" id=\"navbarsExample11\">\n//       <a class=\"navbar-brand col-lg-3 me-0\" href=\"#\">Minute Masters</a>\n//       <ul class=\"navbar-nav col-lg-6 justify-content-lg-center\">\n//         <li class=\"nav-item\">\n//           <a class=\"nav-link\" aria-current=\"page\" to=\"/home\" >Home</a>\n//         </li>\n//         <li class=\"nav-item dropdown\">\n//           <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>\n//           <ul class=\"dropdown-menu\">\n//             <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n//             <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n//             <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n//           </ul>\n//         </li>\n//       </ul>\n//       <div class=\"d-lg-flex col-lg-3 justify-content-lg-end\">\n\n//         <button class=\"btn btn-primary\">\n//           <Link className=\"nav-link\" to=\"/login\">Login</Link>\n//         </button>\n//         <span style={{ marginRight: '10px' }}></span>\n//         <button class=\"btn btn-primary\">\n//           <Link className=\"nav-link\" to=\"/register\">Register</Link>\n//         </button>\n\n//       </div>\n//     </div>\n//   </div>\n// </nav>\n//  );\n// }\n\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Create a context to manage user authentication state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\n// Create a custom hook to use the authentication context\nconst useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Your authentication provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\n  const login = () => {\n    // Implement your login logic here\n    setLoggedIn(true);\n  };\n  const logout = () => {\n    // Implement your logout logic here\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c = AuthProvider;\nexport default function Navbar() {\n  _s3();\n  const auth = useAuth();\n  const handleButtonClick = () => {\n    if (auth.isLoggedIn) {\n      // If the user is logged in, perform logout\n      auth.logout();\n    } else {\n      // If the user is not logged in, navigate to the login page\n      // You can replace the Link with the appropriate logic for your router\n      window.location.href = \"/login\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg bg-body-tertiary rounded\",\n    \"aria-label\": \"Thirteenth navbar example\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-lg-flex col-lg-3 justify-content-lg-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleButtonClick,\n        children: auth.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrap your application with the AuthProvider to provide authentication context\n// You should do this at a higher level in your component tree (e.g., in your App component)\n// Example: ReactDOM.render(<AuthProvider><App /></AuthProvider>, document.getElementById('root'));\n_s3(Navbar, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c2 = Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["React","useContext","Link","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setLoggedIn","useState","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Navbar","_s3","auth","handleButtonClick","window","location","href","className","onClick","to","style","marginRight","_c2","$RefreshReg$"],"sources":["C:/Users/Joaol/Desktop/Minute-Masters/client/src/components/navbar.js"],"sourcesContent":["// import React from \"react\";\r\n \r\n// // We import bootstrap to make our application look better.\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import { Link } from \"react-router-dom\";\r\n \r\n\r\n// // Here, we display our Navbar\r\n// export default function Navbar() {\r\n//  return (\r\n//   <nav class=\"navbar navbar-expand-lg bg-body-tertiary rounded\" aria-label=\"Thirteenth navbar example\">\r\n//   <div class=\"container-fluid\">\r\n//     <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarsExample11\" aria-controls=\"navbarsExample11\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//       <span class=\"navbar-toggler-icon\"></span>\r\n//     </button>\r\n\r\n//     <div class=\"collapse navbar-collapse d-lg-flex\" id=\"navbarsExample11\">\r\n//       <a class=\"navbar-brand col-lg-3 me-0\" href=\"#\">Minute Masters</a>\r\n//       <ul class=\"navbar-nav col-lg-6 justify-content-lg-center\">\r\n//         <li class=\"nav-item\">\r\n//           <a class=\"nav-link\" aria-current=\"page\" to=\"/home\" >Home</a>\r\n//         </li>\r\n//         <li class=\"nav-item dropdown\">\r\n//           <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>\r\n//           <ul class=\"dropdown-menu\">\r\n//             <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n//             <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n//             <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n//           </ul>\r\n//         </li>\r\n//       </ul>\r\n//       <div class=\"d-lg-flex col-lg-3 justify-content-lg-end\">\r\n\r\n//         <button class=\"btn btn-primary\">\r\n//           <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n//         </button>\r\n//         <span style={{ marginRight: '10px' }}></span>\r\n//         <button class=\"btn btn-primary\">\r\n//           <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n//         </button>\r\n\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// </nav>\r\n//  );\r\n// }\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Create a context to manage user authentication state\r\nconst AuthContext = React.createContext();\r\n\r\n// Create a custom hook to use the authentication context\r\nconst useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// Your authentication provider component\r\nconst AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\r\n\r\n  const login = () => {\r\n    // Implement your login logic here\r\n    setLoggedIn(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    // Implement your logout logic here\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default function Navbar() {\r\n  const auth = useAuth();\r\n\r\n  const handleButtonClick = () => {\r\n    if (auth.isLoggedIn) {\r\n      // If the user is logged in, perform logout\r\n      auth.logout();\r\n    } else {\r\n      // If the user is not logged in, navigate to the login page\r\n      // You can replace the Link with the appropriate logic for your router\r\n      window.location.href = \"/login\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary rounded\" aria-label=\"Thirteenth navbar example\">\r\n      {/* ... Your existing navbar code ... */}\r\n      <div className=\"d-lg-flex col-lg-3 justify-content-lg-end\">\r\n        <button className=\"btn btn-primary\" onClick={handleButtonClick}>\r\n          {auth.isLoggedIn ? (\r\n            <span>Logout</span>\r\n          ) : (\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          )}\r\n        </button>\r\n        <span style={{ marginRight: \"10px\" }}></span>\r\n        <button className=\"btn btn-primary\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Wrap your application with the AuthProvider to provide authentication context\r\n// You should do this at a higher level in your component tree (e.g., in your App component)\r\n// Example: ReactDOM.render(<AuthProvider><App /></AuthProvider>, document.getElementById('root'));\r\n"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC,CAAC;;AAEzC;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,OAAOP,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAG,EAAA,CAJMD,OAAO;AAKb,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClB;IACAF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAH,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEN,UAAU;MAAEG,KAAK;MAAEC;IAAO,CAAE;IAAAN,QAAA,EACxDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,GAAA,CAlBIF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAoBlB,eAAe,SAASe,MAAMA,CAAA,EAAG;EAAAC,GAAA;EAC/B,MAAMC,IAAI,GAAGnB,OAAO,CAAC,CAAC;EAEtB,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAID,IAAI,CAACd,UAAU,EAAE;MACnB;MACAc,IAAI,CAACV,MAAM,CAAC,CAAC;IACf,CAAC,MAAM;MACL;MACA;MACAY,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,kDAAkD;IAAC,cAAW,2BAA2B;IAAArB,QAAA,eAEtGN,OAAA;MAAK2B,SAAS,EAAC,2CAA2C;MAAArB,QAAA,gBACxDN,OAAA;QAAQ2B,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEL,iBAAkB;QAAAjB,QAAA,EAC5DgB,IAAI,CAACd,UAAU,gBACdR,OAAA;UAAAM,QAAA,EAAM;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEnBlB,OAAA,CAACF,IAAI;UAAC6B,SAAS,EAAC,UAAU;UAACE,EAAE,EAAC,QAAQ;UAAAvB,QAAA,EAAC;QAEvC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACTlB,OAAA;QAAM8B,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAO;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7ClB,OAAA;QAAQ2B,SAAS,EAAC,iBAAiB;QAAArB,QAAA,eACjCN,OAAA,CAACF,IAAI;UAAC6B,SAAS,EAAC,UAAU;UAACE,EAAE,EAAC,WAAW;UAAAvB,QAAA,EAAC;QAE1C;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AACA;AACA;AAAAG,GAAA,CAxCwBD,MAAM;EAAA,QACfjB,OAAO;AAAA;AAAA6B,GAAA,GADEZ,MAAM;AAAA,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}