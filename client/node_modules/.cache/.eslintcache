[{"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\index.js":"1","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\App.js":"2","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\register.js":"3","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\home.js":"4","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\login.js":"5","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\navbar.js":"6","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\timer.js":"7","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js":"8","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js":"9","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js":"10"},{"size":301,"mtime":1701401199290,"results":"11","hashOfConfig":"12"},{"size":887,"mtime":1702009738010,"results":"13","hashOfConfig":"12"},{"size":2918,"mtime":1702009738015,"results":"14","hashOfConfig":"12"},{"size":128,"mtime":1702009738013,"results":"15","hashOfConfig":"12"},{"size":4994,"mtime":1701913834148,"results":"16","hashOfConfig":"12"},{"size":1207,"mtime":1702009738015,"results":"17","hashOfConfig":"12"},{"size":6100,"mtime":1701999998067,"results":"18","hashOfConfig":"12"},{"size":430,"mtime":1702009738013,"results":"19","hashOfConfig":"12"},{"size":870,"mtime":1702009738011,"results":"20","hashOfConfig":"12"},{"size":5241,"mtime":1702009738013,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mwbe6b",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\index.js",[],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\App.js",["59"],[],"import React from \"react\";\r\nimport { \r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Home from \"./components/home\"; // Import your Home component\r\nimport Login from \"./components/login\"; // Import your Login component\r\nimport Register from \"./components/register\"; // Import your Register component\r\nimport Navbar from \"./components/navbar\";\r\nimport Timesheet from \"./components/Timesheet/timesheet\";\r\nimport Timer from \"./components/timer\";\r\n\r\nconst App = () => {\r\n return (\r\n  <div>\r\n      <Navbar/>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />}/>\r\n        <Route path=\"/login\" element={<Login />}/>\r\n        <Route path=\"/register\" element={<Register />}/>\r\n        <Route path=\"/timesheet\" element={<Timesheet />}/>\r\n        <Route path=\"/timer\" element={<Timer />}/>\r\n      </Routes>\r\n  </div>\r\n  \r\n );\r\n};\r\n \r\nexport default App;","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\register.js",[],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\home.js",["60"],[],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Home = () => {\r\n    \r\n};\r\n\r\nexport default Home;","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\login.js",["61"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function App() {\r\n  const [form, setForm] = useState({\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  \r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n  \r\n  // This function will handle the submission.\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // When a post request is sent to the create URL, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newPerson),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        console.error('Failed to log in');\r\n        return;\r\n      }\r\n  \r\n      const { token } = await response.json();\r\n      localStorage.setItem('token', token); // Storing the token in local storage\r\n      setForm({ emailAddress: \"\", password: \"\" });\r\n      navigate(\"/timer\");\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchUserInfo = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/', {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const { success, user, message } = response.data;\r\n\r\n      if (success) {\r\n        console.log('User info:', user);\r\n      } else {\r\n        console.error('Failed to fetch user info:', message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n  const mainStyle = {\r\n            // Define your styles here\r\n            // For example:\r\n            backgroundColor: \"#f0f0f0\",\r\n            padding: \"20px\",\r\n            maxWidth: \"400px\"\r\n        };\r\n    \r\n        return (\r\n        <main style={mainStyle} className=\"form-signin d-flex align-items-center\" onSubmit={onSubmit}>\r\n            <form className=\"w-100\">\r\n                <h1 className=\"h3 mb-3 fw-normal\">Login</h1>\r\n                <div className=\"form-floating\">\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"name@example.com\" value={form.emailAddress} onChange={(e)=>updateForm({emailAddress: e.target.value})}/>\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" value={form.password} onChange={(e)=> updateForm({password: e.target.value})}/>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n    \r\n                <div className=\"form-check text-start my-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"remember-me\" id=\"flexCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                        Remember me\r\n                    </label>\r\n                </div>\r\n                <button className=\"btn btn-primary w-100 py-2\" type=\"submit\">Sign in</button>\r\n                <p className=\"mt-5 mb-3 text-body-secondary\">© 2017–2023</p>\r\n            </form>\r\n        </main>\r\n        );\r\n  // return (\r\n  //   <div>\r\n  //     <h1>Login and Registration Page</h1>\r\n  //     <div>\r\n  //       <h2>Register</h2>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         placeholder=\"Username\"\r\n  //         value={username}\r\n  //         onChange={(e) => setUsername(e.target.value)}\r\n  //       />\r\n  //       <input\r\n  //         type=\"password\"\r\n  //         placeholder=\"Password\"\r\n  //         value={password}\r\n  //         onChange={(e) => setPassword(e.target.value)}\r\n  //       />\r\n  //       <button onClick={handleRegister}>Register</button>\r\n  //     </div>\r\n  //     <div>\r\n  //       <h2>Login</h2>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         placeholder=\"Username\"\r\n  //         value={username}\r\n  //         onChange={(e) => setUsername(e.target.value)}\r\n  //       />\r\n  //       <input\r\n  //         type=\"password\"\r\n  //         placeholder=\"Password\"\r\n  //         value={password}\r\n  //         onChange={(e) => setPassword(e.target.value)}\r\n  //       />\r\n  //       <button onClick={handleLogin}>Login</button>\r\n  //     </div>\r\n  //     <div>\r\n  //       <h2>Fetch User Info</h2>\r\n  //       <button onClick={fetchUserInfo}>Fetch User Info</button>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\n// export default App;\r\n//     \r\n// };\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\navbar.js",["62"],[],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport calendarImage from \"./NavbarReq/calendarImage.png\";\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from \"./NavbarReq/dropdown\";\r\n\r\n// Here, we display our Navbar\r\nconst Navbar = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <nav class=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\r\n        <a href=\"/\" class=\"col-md-3 mb-2 mb-md-0 link-body-emphasis text-decoration-none\">\r\n          <img src={ calendarImage } class=\"bi me-2\" width=\"40\" height=\"40\"/>\r\n          <span class=\"fs-4\">Minute Masters</span>\r\n        </a>\r\n\r\n        <div class=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n          <Link to=\"/\" class=\"nav-link px-2\">Home</Link>\r\n          <Dropdown />\r\n        </div>\r\n\r\n        <div class=\"col-md-3 text-end\">\r\n          <Link to=\"/login\">\r\n            <button　type=\"button\" class=\"btn btn-primary me-2\">Login</button>\r\n          </Link>\r\n          <Link to=\"/register\">\r\n            <button　type=\"button\" class=\"btn btn-primary me-2\">register</button>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\timer.js",["63","64","65","66"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Timer() {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const authToken = localStorage.getItem('token');\r\n\r\n//     // Check if the timer was running before the page was refreshed\r\n//     const storedStartTime = localStorage.getItem('startTime');\r\n//     if (localStorage.getItem('running')) {\r\n        \r\n//       const storedElapsedTime = Date.now() - storedStartTime;\r\n//       localStorage.setItem('elapsedTime', storedElapsedTime);\r\n//       setElapsedTime(storedElapsedTime);\r\n\r\n//       intervalRef.current = setInterval(() => {\r\n//         setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n//       }, 1000);\r\n//     }\r\n\r\n//     if (!authToken) {\r\n//       // Redirect to login if no token is present\r\n//       navigate('/login');\r\n//     } else {\r\n//       // Fetch timer data when the component mounts\r\n//       fetchTimerData();\r\n//     }\r\n\r\n//     // Cleanup the interval and save timer data when the component unmounts or beforeunload\r\n//     return () => {\r\n//       clearInterval(intervalRef.current);\r\n//       saveTimerData();\r\n//     };\r\n//   }, [navigate]);\r\nuseEffect(() => {\r\n    const authToken = localStorage.getItem('token');\r\n\r\n    // Check if the timer was running before the page was refreshed\r\n    const storedStartTime = localStorage.getItem('startTime');\r\n    if (localStorage.getItem('running') == 'true') {\r\n      const storedElapsedTime = Date.now() - storedStartTime;\r\n      console.log(storedElapsedTime);\r\n      localStorage.setItem('elapsedTime', storedElapsedTime);\r\n      setElapsedTime(storedElapsedTime);\r\n      setTimerRunning(true);\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n\r\n    if (!authToken) {\r\n      // Redirect to login if no token is present\r\n      navigate('/login');\r\n    } else if(localStorage.getItem('running') != 'NaN'){\r\n      // Fetch timer data when the component mounts\r\n      console.log(\"Im here 2\");\r\n      console.log(localStorage.getItem('running'));\r\n      setElapsedTime(localStorage.getItem('elapsedTime'));\r\n    }\r\n    else\r\n    {\r\n        console.log(\"Im here\");\r\n        fetchTimerData();\r\n    }\r\n\r\n    // Handle beforeunload event\r\n    const handleBeforeUnload = (event) => {\r\n      saveTimerData();\r\n      localStorage.setItem('elapsedTime', elapsedTime)\r\n      // Cancel the default behavior to show the confirmation dialog\r\n      event.preventDefault();\r\n      // Chrome requires the returnValue property to be set\r\n\r\n      event.returnValue = '';\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    // Cleanup the interval and remove the beforeunload event listener when the component unmounts\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      saveTimerData();\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [navigate]);\r\n\r\n  const startTimer = () => {\r\n    if (!timerRunning) {\r\n      const startTime = Date.now() - elapsedTime;\r\n      setTimerRunning(true);\r\n      localStorage.setItem('running', true);\r\n      localStorage.setItem('startDate', Date.now);\r\n      // Store the start time in localStorage\r\n      localStorage.setItem('startTime', elapsedTime);\r\n      console.log('Start time stored:', startTime);\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const saveTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({ elapsedTime, timeStopped: Boolean(timerRunning) }),\r\n      });\r\n\r\n      // Handle the response\r\n    } catch (error) {\r\n      console.error('Error saving timer data:', error);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    //clearInterval(intervalRef.current);\r\n    setTimerRunning(false);\r\n    saveTimerData();\r\n    localStorage.setItem('elapsedTime', 0);\r\n    localStorage.setItem('startTime', elapsedTime);\r\n    localStorage.setItem('running', false);\r\n    \r\n    clearInterval(intervalRef.current);\r\n    // Save timer data when stopping the timer\r\n    \r\n  };\r\n\r\n  const displayTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const fetchTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (!data.timer.timeStopped) {\r\n          setTimerRunning(true);\r\n          setElapsedTime(data.timer.date - data.timer.elapsedTime);\r\n        } else {\r\n          setElapsedTime(data.timer.elapsedTime);\r\n        }\r\n      } else {\r\n        console.error('Error fetching timer data:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching timer data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startTimer}>Start Timer</button>\r\n      <button onClick={stopTimer}>Stop Timer</button>\r\n      <button>Reset Timer for Today</button>\r\n      <p id=\"timerDisplay\">Timer: {displayTime(elapsedTime)}</p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js",[],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js",["67","68","69"],[],"// Dropdown.js\r\nimport React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <li className={`nav-item dropdown ${isOpen ? 'show' : ''}`}>\r\n      <a className=\"nav-link dropdown-toggle\" href=\"#\" onClick={toggleDropdown} data-bs-toggle=\"dropdown\" aria-expanded={isOpen}>\r\n        Dropdown\r\n      </a>\r\n      <ul className={`dropdown-menu ${isOpen ? 'show' : ''}`} data-bs-popper=\"static\">\r\n        <li><a className=\"dropdown-item\" href=\"/timesheet\">Timesheet</a></li>\r\n        <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n        <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js",["70","71"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./weekday.css\";\r\nimport LeftArrow from \"./arrowL.png\";\r\nimport RightArrow from \"./arrowR.png\";\r\n\r\nconst Calendar = () => {\r\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\",\r\n    \"May\", \"June\", \"July\", \"August\",\r\n    \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const [activeMonth, setActiveMonth] = useState(\"December\"); // Initial active month\r\n  const [activeYear, setActiveYear] = useState(currentYear); // Initial active year\r\n\r\n  const handleMonthChange = (event) => {\r\n    setActiveMonth(event.target.value);\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setActiveYear(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const getDaysInMonth = (month, year) => {\r\n    const firstDayOfMonth = new Date(year, months.indexOf(month), 1).getDay();\r\n    const daysInMonth = new Date(year, months.indexOf(month) + 1, 0).getDate();\r\n  \r\n    const leadingEmptyDays = (firstDayOfMonth) % 7; // Adjust to start from Sunday\r\n  \r\n    // Calculate trailing (ending) empty days\r\n    const lastDayOfMonth = new Date(year, months.indexOf(month) + 1, 0).getDay();\r\n    const endingEmptyDays = (6 - lastDayOfMonth) % 7;\r\n  \r\n    const prevMonthLastDate = new Date(year, months.indexOf(month), 0).getDate();\r\n  \r\n    // Generate arrays for the days of the previous month, current month, and next month\r\n    const prevMonthDays = Array.from({ length: leadingEmptyDays }, (_, i) => prevMonthLastDate - leadingEmptyDays + i + 1);\r\n    const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n    const nextMonthDays = Array.from({ length: endingEmptyDays }, (_, i) => i + 1);\r\n  \r\n    // Combine all arrays to get the total array of days\r\n    const totalDays = prevMonthDays.concat(currentMonthDays, nextMonthDays);\r\n  \r\n    return totalDays;\r\n  };\r\n\r\n  const handlePrevMonth = () => {\r\n    const currentIndex = months.indexOf(activeMonth);\r\n    const newMonth = currentIndex === 0 ? months[11] : months[currentIndex - 1];\r\n    const newYear = currentIndex === 0 ? activeYear - 1 : activeYear;\r\n  \r\n    setActiveMonth(newMonth);\r\n    setActiveYear(newYear);\r\n  };\r\n  \r\n  const handleNextMonth = () => {\r\n    const currentIndex = months.indexOf(activeMonth);\r\n    const newMonth = currentIndex === 11 ? months[0] : months[currentIndex + 1];\r\n    const newYear = currentIndex === 11 ? activeYear + 1 : activeYear;\r\n  \r\n    setActiveMonth(newMonth);\r\n    setActiveYear(newYear);\r\n  };\r\n\r\n  const daysInMonth = getDaysInMonth(activeMonth, activeYear);\r\n\r\n  let oneCount = 0;\r\n\r\n  return (\r\n    <div className=\"dropdown-menu d-block position-static p-2 mx-0 shadow rounded-3 w-340px\" data-bs-theme=\"light\">\r\n      <div className=\"d-grid gap-1\">\r\n        <div className=\"cal\">\r\n            <div className=\"cal-month d-flex align-items-center\">\r\n                {/* Month navigation buttons */}\r\n                <button className=\"btn me-2\" type=\"button\" onClick={handlePrevMonth}>\r\n                    <img src={LeftArrow} className=\"bi\" width=\"16\" height=\"16\"/>\r\n                </button>\r\n                \r\n                {/* Month selection dropdown */}\r\n                <select className=\"form-select me-2 cal-month-name\" value={activeMonth} onChange={handleMonthChange}>\r\n                    {months.map((month) => (\r\n                    <option key={month} value={month}>{month}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                {/* Year selection input */}\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control me-2 cal-year-input\"\r\n                    value={activeYear}\r\n                    onChange={handleYearChange}\r\n                />\r\n\r\n                <button className=\"btn\" type=\"button\" onClick={handleNextMonth}>\r\n                    <img src={RightArrow} className=\"bi\" width=\"16\" height=\"16\"/>\r\n                </button>\r\n            </div>\r\n\r\n          {/* Weekdays */}\r\n          <div className=\"cal-weekdays text-body-secondary\">\r\n            {daysOfWeek.map((weekday) => (\r\n              <div key={weekday} className=\"cal-weekday\">{weekday}</div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Days */}\r\n          <div className=\"cal-days\">\r\n            {daysInMonth.map((day, index) => {\r\n              let isDisabled = true;\r\n\r\n              if (day > 1 && oneCount === 1) {\r\n                isDisabled = false;\r\n              }\r\n\r\n              if (day === 1) {\r\n                oneCount++;\r\n                isDisabled = false;\r\n              }\r\n\r\n              if (oneCount > 1) {\r\n                isDisabled = true;\r\n              } \r\n\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  className={`btn cal-btn ${isDisabled ? 'disabled' : ''}`}\r\n                  type=\"button\"\r\n                  disabled={isDisabled}\r\n                >\r\n                  {day}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n",{"ruleId":"72","severity":1,"message":"73","line":3,"column":20,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":51,"column":9,"nodeType":"74","messageId":"75","endLine":51,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":13,"column":11,"nodeType":"80","endLine":13,"endColumn":78},{"ruleId":"81","severity":1,"message":"82","line":45,"column":41,"nodeType":"83","messageId":"84","endLine":45,"endColumn":43},{"ruleId":"81","severity":1,"message":"85","line":60,"column":47,"nodeType":"83","messageId":"84","endLine":60,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":91,"column":6,"nodeType":"88","endLine":91,"endColumn":16,"suggestions":"89"},{"ruleId":"72","severity":1,"message":"90","line":111,"column":13,"nodeType":"74","messageId":"75","endLine":111,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":14,"column":7,"nodeType":"80","endLine":14,"endColumn":130},{"ruleId":"91","severity":1,"message":"92","line":19,"column":13,"nodeType":"80","endLine":19,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":20,"column":13,"nodeType":"80","endLine":20,"endColumn":51},{"ruleId":"78","severity":1,"message":"79","line":80,"column":21,"nodeType":"80","endLine":80,"endColumn":81},{"ruleId":"78","severity":1,"message":"79","line":99,"column":21,"nodeType":"80","endLine":99,"endColumn":82},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'fetchUserInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'elapsedTime' and 'saveTimerData'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"94","fix":"95"},"Update the dependencies array to be: [elapsedTime, navigate, saveTimerData]",{"range":"96","text":"97"},[3198,3208],"[elapsedTime, navigate, saveTimerData]"]