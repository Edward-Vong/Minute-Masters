[{"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\index.js":"1","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\App.js":"2","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\register.js":"3","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\home.js":"4","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\login.js":"5","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\navbar.js":"6","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\timer.js":"7","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js":"8","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js":"9","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js":"10","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheetFormAssets\\timesheetForm.js":"11"},{"size":301,"mtime":1701401199290,"results":"12","hashOfConfig":"13"},{"size":887,"mtime":1702009738010,"results":"14","hashOfConfig":"13"},{"size":2918,"mtime":1702009738015,"results":"15","hashOfConfig":"13"},{"size":128,"mtime":1702009738013,"results":"16","hashOfConfig":"13"},{"size":5036,"mtime":1702103043457,"results":"17","hashOfConfig":"13"},{"size":2035,"mtime":1702085940922,"results":"18","hashOfConfig":"13"},{"size":6100,"mtime":1701999998067,"results":"19","hashOfConfig":"13"},{"size":869,"mtime":1702082696280,"results":"20","hashOfConfig":"13"},{"size":867,"mtime":1702085940920,"results":"21","hashOfConfig":"13"},{"size":6005,"mtime":1702113803980,"results":"22","hashOfConfig":"13"},{"size":10234,"mtime":1702113525893,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1mwbe6b",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\index.js",[],[],["64"],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\App.js",["65"],[],"import React from \"react\";\r\nimport { \r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Home from \"./components/home\"; // Import your Home component\r\nimport Login from \"./components/login\"; // Import your Login component\r\nimport Register from \"./components/register\"; // Import your Register component\r\nimport Navbar from \"./components/navbar\";\r\nimport Timesheet from \"./components/Timesheet/timesheet\";\r\nimport Timer from \"./components/timer\";\r\n\r\nconst App = () => {\r\n return (\r\n  <div>\r\n      <Navbar/>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />}/>\r\n        <Route path=\"/login\" element={<Login />}/>\r\n        <Route path=\"/register\" element={<Register />}/>\r\n        <Route path=\"/timesheet\" element={<Timesheet />}/>\r\n        <Route path=\"/timer\" element={<Timer />}/>\r\n      </Routes>\r\n  </div>\r\n  \r\n );\r\n};\r\n \r\nexport default App;","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\register.js",[],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\home.js",["66"],[],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Home = () => {\r\n    \r\n};\r\n\r\nexport default Home;","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\login.js",["67"],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\navbar.js",["68"],[],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport calendarImage from \"./NavbarReq/calendarImage.png\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Dropdown from \"./NavbarReq/dropdown\";\r\n\r\n// Here, we display our Navbar\r\nconst Navbar = () => {\r\n\r\n  const token = localStorage.getItem('token');\r\n  const isLoggedIn = !!token;\r\n\r\n  const navigate = useNavigate();\r\n  const handleLogout = () => {\r\n    // Remove the token from localStorage or perform logout logic\r\n    localStorage.removeItem('token');\r\n    // Perform any additional cleanup if needed\r\n\r\n    // Redirect to the desired route after logout\r\n    navigate('/login'); // Redirect to the login page or any other appropriate route\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      <nav class=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\r\n        <a href=\"/\" class=\"col-md-3 mb-2 mb-md-0 link-body-emphasis text-decoration-none\">\r\n          <img src={ calendarImage } class=\"bi me-2\" width=\"40\" height=\"40\"/>\r\n          <span class=\"fs-4\">Minute Masters</span>\r\n        </a>\r\n\r\n        <div class=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n          <Link to=\"/\" class=\"nav-link px-2\">Home</Link>\r\n          <Dropdown />\r\n        </div>\r\n\r\n        <div class=\"col-md-3 text-end\">\r\n        {isLoggedIn ? (\r\n            /* If logged in, show logout button */\r\n              <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleLogout}>Logout\r\n              </button>\r\n          ) : (\r\n            /* If not logged in, show login and register buttons */\r\n            <>\r\n              <Link to=\"/login\">\r\n                <button type=\"button\" className=\"btn btn-primary me-2\">Login</button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <button type=\"button\" className=\"btn btn-primary me-2\">Register</button>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;",["69"],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\timer.js",["70","71","72","73"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Timer() {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const authToken = localStorage.getItem('token');\r\n\r\n//     // Check if the timer was running before the page was refreshed\r\n//     const storedStartTime = localStorage.getItem('startTime');\r\n//     if (localStorage.getItem('running')) {\r\n        \r\n//       const storedElapsedTime = Date.now() - storedStartTime;\r\n//       localStorage.setItem('elapsedTime', storedElapsedTime);\r\n//       setElapsedTime(storedElapsedTime);\r\n\r\n//       intervalRef.current = setInterval(() => {\r\n//         setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n//       }, 1000);\r\n//     }\r\n\r\n//     if (!authToken) {\r\n//       // Redirect to login if no token is present\r\n//       navigate('/login');\r\n//     } else {\r\n//       // Fetch timer data when the component mounts\r\n//       fetchTimerData();\r\n//     }\r\n\r\n//     // Cleanup the interval and save timer data when the component unmounts or beforeunload\r\n//     return () => {\r\n//       clearInterval(intervalRef.current);\r\n//       saveTimerData();\r\n//     };\r\n//   }, [navigate]);\r\nuseEffect(() => {\r\n    const authToken = localStorage.getItem('token');\r\n\r\n    // Check if the timer was running before the page was refreshed\r\n    const storedStartTime = localStorage.getItem('startTime');\r\n    if (localStorage.getItem('running') == 'true') {\r\n      const storedElapsedTime = Date.now() - storedStartTime;\r\n      console.log(storedElapsedTime);\r\n      localStorage.setItem('elapsedTime', storedElapsedTime);\r\n      setElapsedTime(storedElapsedTime);\r\n      setTimerRunning(true);\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n\r\n    if (!authToken) {\r\n      // Redirect to login if no token is present\r\n      navigate('/login');\r\n    } else if(localStorage.getItem('running') != 'NaN'){\r\n      // Fetch timer data when the component mounts\r\n      console.log(\"Im here 2\");\r\n      console.log(localStorage.getItem('running'));\r\n      setElapsedTime(localStorage.getItem('elapsedTime'));\r\n    }\r\n    else\r\n    {\r\n        console.log(\"Im here\");\r\n        fetchTimerData();\r\n    }\r\n\r\n    // Handle beforeunload event\r\n    const handleBeforeUnload = (event) => {\r\n      saveTimerData();\r\n      localStorage.setItem('elapsedTime', elapsedTime)\r\n      // Cancel the default behavior to show the confirmation dialog\r\n      event.preventDefault();\r\n      // Chrome requires the returnValue property to be set\r\n\r\n      event.returnValue = '';\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    // Cleanup the interval and remove the beforeunload event listener when the component unmounts\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      saveTimerData();\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [navigate]);\r\n\r\n  const startTimer = () => {\r\n    if (!timerRunning) {\r\n      const startTime = Date.now() - elapsedTime;\r\n      setTimerRunning(true);\r\n      localStorage.setItem('running', true);\r\n      localStorage.setItem('startDate', Date.now);\r\n      // Store the start time in localStorage\r\n      localStorage.setItem('startTime', elapsedTime);\r\n      console.log('Start time stored:', startTime);\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const saveTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({ elapsedTime, timeStopped: Boolean(timerRunning) }),\r\n      });\r\n\r\n      // Handle the response\r\n    } catch (error) {\r\n      console.error('Error saving timer data:', error);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    //clearInterval(intervalRef.current);\r\n    setTimerRunning(false);\r\n    saveTimerData();\r\n    localStorage.setItem('elapsedTime', 0);\r\n    localStorage.setItem('startTime', elapsedTime);\r\n    localStorage.setItem('running', false);\r\n    \r\n    clearInterval(intervalRef.current);\r\n    // Save timer data when stopping the timer\r\n    \r\n  };\r\n\r\n  const displayTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const fetchTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (!data.timer.timeStopped) {\r\n          setTimerRunning(true);\r\n          setElapsedTime(data.timer.date - data.timer.elapsedTime);\r\n        } else {\r\n          setElapsedTime(data.timer.elapsedTime);\r\n        }\r\n      } else {\r\n        console.error('Error fetching timer data:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching timer data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startTimer}>Start Timer</button>\r\n      <button onClick={stopTimer}>Stop Timer</button>\r\n      <button>Reset Timer for Today</button>\r\n      <p id=\"timerDisplay\">Timer: {displayTime(elapsedTime)}</p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js",[],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js",["74","75","76"],[],"// Dropdown.js\r\nimport React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <li className={`nav-item dropdown ${isOpen ? 'show' : ''}`}>\r\n      <a className=\"nav-link dropdown-toggle\" href=\"#\" onClick={toggleDropdown} data-bs-toggle=\"dropdown\" aria-expanded={isOpen}>\r\n        Timesheets\r\n      </a>\r\n      <ul className={`dropdown-menu ${isOpen ? 'show' : ''}`} data-bs-popper=\"static\">\r\n        <li><a className=\"dropdown-item\" href=\"/timesheet\">My Calendar</a></li>\r\n        <li><a className=\"dropdown-item\" href=\"#\">Create a Group</a></li>\r\n        <li><a className=\"dropdown-item\" href=\"#\">Join a Group</a></li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js",["77"],[],"C:\\Users\\Joaol\\Desktop\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheetFormAssets\\timesheetForm.js",["78","79","80"],[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":20,"nodeType":"85","messageId":"86","endLine":3,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"83","severity":1,"message":"88","line":52,"column":9,"nodeType":"85","messageId":"86","endLine":52,"endColumn":22},{"ruleId":"89","severity":1,"message":"90","line":27,"column":11,"nodeType":"91","endLine":27,"endColumn":78},{"ruleId":"81","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":45,"column":41,"nodeType":"95","messageId":"96","endLine":45,"endColumn":43},{"ruleId":"93","severity":1,"message":"97","line":60,"column":47,"nodeType":"95","messageId":"96","endLine":60,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":91,"column":6,"nodeType":"100","endLine":91,"endColumn":16,"suggestions":"101"},{"ruleId":"83","severity":1,"message":"102","line":111,"column":13,"nodeType":"85","messageId":"86","endLine":111,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":14,"column":7,"nodeType":"91","endLine":14,"endColumn":130},{"ruleId":"103","severity":1,"message":"104","line":19,"column":13,"nodeType":"91","endLine":19,"endColumn":51},{"ruleId":"103","severity":1,"message":"104","line":20,"column":13,"nodeType":"91","endLine":20,"endColumn":51},{"ruleId":"98","severity":1,"message":"105","line":29,"column":6,"nodeType":"100","endLine":29,"endColumn":8,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"107","line":21,"column":6,"nodeType":"100","endLine":21,"endColumn":20,"suggestions":"108"},{"ruleId":"83","severity":1,"message":"109","line":217,"column":9,"nodeType":"85","messageId":"86","endLine":217,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":316,"column":17,"nodeType":"91","endLine":316,"endColumn":69},"no-new-object",["110"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'fetchUserInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'elapsedTime' and 'saveTimerData'. Either include them or remove the dependency array.","ArrayExpression",["111"],"'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'months'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkIfSameAsCurrentDate' and 'refreshData'. Either include them or remove the dependency array.",["113"],"'handleInputChange' is assigned a value but never used.","no-object-constructor",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [elapsedTime, navigate, saveTimerData]",{"range":"120","text":"121"},"Update the dependencies array to be: [months]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkIfSameAsCurrentDate, refreshData, selectedDate]",{"range":"124","text":"125"},[3198,3208],"[elapsedTime, navigate, saveTimerData]",[1129,1131],"[months]",[818,832],"[checkIfSameAsCurrentDate, refreshData, selectedDate]"]