[{"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\index.js":"1","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\App.js":"2","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\home.js":"3","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\login.js":"4","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\register.js":"5","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\navbar.js":"6","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js":"7","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js":"8","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js":"9","C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\timer.js":"10"},{"size":301,"mtime":1701928501957,"results":"11","hashOfConfig":"12"},{"size":885,"mtime":1702007261233,"results":"13","hashOfConfig":"12"},{"size":128,"mtime":1702007112274,"results":"14","hashOfConfig":"12"},{"size":4994,"mtime":1702007184233,"results":"15","hashOfConfig":"12"},{"size":3058,"mtime":1702007303011,"results":"16","hashOfConfig":"12"},{"size":1193,"mtime":1702007112274,"results":"17","hashOfConfig":"12"},{"size":5241,"mtime":1702007112274,"results":"18","hashOfConfig":"12"},{"size":430,"mtime":1702007112274,"results":"19","hashOfConfig":"12"},{"size":870,"mtime":1702007112274,"results":"20","hashOfConfig":"12"},{"size":4144,"mtime":1702007184237,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bzaqi7",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\index.js",[],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\App.js",["55"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\home.js",["56"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\login.js",["57"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function App() {\r\n  const [form, setForm] = useState({\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  \r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n  \r\n  // This function will handle the submission.\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // When a post request is sent to the create URL, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newPerson),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        console.error('Failed to log in');\r\n        return;\r\n      }\r\n  \r\n      const { token } = await response.json();\r\n      localStorage.setItem('token', token); // Storing the token in local storage\r\n      setForm({ emailAddress: \"\", password: \"\" });\r\n      navigate(\"/timer\");\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchUserInfo = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/', {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const { success, user, message } = response.data;\r\n\r\n      if (success) {\r\n        console.log('User info:', user);\r\n      } else {\r\n        console.error('Failed to fetch user info:', message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n  const mainStyle = {\r\n            // Define your styles here\r\n            // For example:\r\n            backgroundColor: \"#f0f0f0\",\r\n            padding: \"20px\",\r\n            maxWidth: \"400px\"\r\n        };\r\n    \r\n        return (\r\n        <main style={mainStyle} className=\"form-signin d-flex align-items-center\" onSubmit={onSubmit}>\r\n            <form className=\"w-100\">\r\n                <h1 className=\"h3 mb-3 fw-normal\">Login</h1>\r\n                <div className=\"form-floating\">\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"name@example.com\" value={form.emailAddress} onChange={(e)=>updateForm({emailAddress: e.target.value})}/>\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" value={form.password} onChange={(e)=> updateForm({password: e.target.value})}/>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n    \r\n                <div className=\"form-check text-start my-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"remember-me\" id=\"flexCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                        Remember me\r\n                    </label>\r\n                </div>\r\n                <button className=\"btn btn-primary w-100 py-2\" type=\"submit\">Sign in</button>\r\n                <p className=\"mt-5 mb-3 text-body-secondary\">© 2017–2023</p>\r\n            </form>\r\n        </main>\r\n        );\r\n  // return (\r\n  //   <div>\r\n  //     <h1>Login and Registration Page</h1>\r\n  //     <div>\r\n  //       <h2>Register</h2>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         placeholder=\"Username\"\r\n  //         value={username}\r\n  //         onChange={(e) => setUsername(e.target.value)}\r\n  //       />\r\n  //       <input\r\n  //         type=\"password\"\r\n  //         placeholder=\"Password\"\r\n  //         value={password}\r\n  //         onChange={(e) => setPassword(e.target.value)}\r\n  //       />\r\n  //       <button onClick={handleRegister}>Register</button>\r\n  //     </div>\r\n  //     <div>\r\n  //       <h2>Login</h2>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         placeholder=\"Username\"\r\n  //         value={username}\r\n  //         onChange={(e) => setUsername(e.target.value)}\r\n  //       />\r\n  //       <input\r\n  //         type=\"password\"\r\n  //         placeholder=\"Password\"\r\n  //         value={password}\r\n  //         onChange={(e) => setPassword(e.target.value)}\r\n  //       />\r\n  //       <button onClick={handleLogin}>Login</button>\r\n  //     </div>\r\n  //     <div>\r\n  //       <h2>Fetch User Info</h2>\r\n  //       <button onClick={fetchUserInfo}>Fetch User Info</button>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\n// export default App;\r\n//     \r\n// };\r\n\r\n\r\n\r\n\r\n",["58"],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\register.js",["59","60"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\navbar.js",["61"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\Timesheet\\calendarAssets\\calendar.js",["62","63"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\Timesheet\\timesheet.js",[],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\NavbarReq\\dropdown.js",["64","65","66"],[],"C:\\Users\\Edward\\Documents\\School\\Minute-Masters\\client\\src\\components\\timer.js",["67","68"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Timer() {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem('token');\r\n\r\n    // Check if the timer was running before the page was refreshed\r\n    const storedStartTime = localStorage.getItem('startTime');\r\n    if (localStorage.getItem('running')) {\r\n        \r\n      const storedElapsedTime = Date.now() - storedStartTime;\r\n      localStorage.setItem('elapsedTime', storedElapsedTime);\r\n      setElapsedTime(storedElapsedTime);\r\n      setTimerRunning(false);\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n\r\n    if (!authToken) {\r\n      // Redirect to login if no token is present\r\n      navigate('/login');\r\n    } else {\r\n      // Fetch timer data when the component mounts\r\n      fetchTimerData();\r\n    }\r\n\r\n    // Cleanup the interval and save timer data when the component unmounts or beforeunload\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      saveTimerData();\r\n    };\r\n  }, [navigate]);\r\n\r\n  const startTimer = () => {\r\n    if (!timerRunning) {\r\n      const startTime = Date.now() - elapsedTime;\r\n      setTimerRunning(true);\r\n      localStorage.setItem('running', true);\r\n      // Store the start time in localStorage\r\n      localStorage.setItem('startTime', elapsedTime);\r\n      console.log('Start time stored:', startTime.toString);\r\n      intervalRef.current = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1000);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const saveTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: authToken,\r\n        },\r\n        body: JSON.stringify({ elapsedTime, timeStopped: Boolean(timerRunning) }),\r\n      });\r\n\r\n      // Handle the response\r\n    } catch (error) {\r\n      console.error('Error saving timer data:', error);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    localStorage.setItem('elapsedTime', 0);\r\n    localStorage.setItem('startTime', elapsedTime);\r\n    localStorage.setItem('running', false);\r\n    setTimerRunning(false);\r\n    clearInterval(intervalRef.current);\r\n    // Save timer data when stopping the timer\r\n    saveTimerData();\r\n  };\r\n\r\n  const displayTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const fetchTimerData = async () => {\r\n    try {\r\n      const authToken = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/timer', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: authToken,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (!data.timer.timeStopped) {\r\n          setTimerRunning(true);\r\n          setElapsedTime(data.timer.date - data.timer.elapsedTime);\r\n        } else {\r\n          setElapsedTime(data.timer.elapsedTime);\r\n        }\r\n      } else {\r\n        console.error('Error fetching timer data:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching timer data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startTimer}>Start Timer</button>\r\n      <button onClick={stopTimer}>Stop Timer</button>\r\n      <button>Reset Timer for Today</button>\r\n      <p id=\"timerDisplay\">Timer: {displayTime(elapsedTime)}</p>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"69","severity":1,"message":"70","line":3,"column":20,"nodeType":"71","messageId":"72","endLine":3,"endColumn":26},{"ruleId":"69","severity":1,"message":"73","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"74","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"75","replacedBy":"76"},{"ruleId":"69","severity":1,"message":"77","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},{"ruleId":"69","severity":1,"message":"78","line":53,"column":9,"nodeType":"71","messageId":"72","endLine":53,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":13,"column":11,"nodeType":"81","endLine":13,"endColumn":78},{"ruleId":"79","severity":1,"message":"80","line":80,"column":21,"nodeType":"81","endLine":80,"endColumn":81},{"ruleId":"79","severity":1,"message":"80","line":99,"column":21,"nodeType":"81","endLine":99,"endColumn":82},{"ruleId":"82","severity":1,"message":"83","line":14,"column":7,"nodeType":"81","endLine":14,"endColumn":130},{"ruleId":"82","severity":1,"message":"83","line":19,"column":13,"nodeType":"81","endLine":19,"endColumn":51},{"ruleId":"82","severity":1,"message":"83","line":20,"column":13,"nodeType":"81","endLine":20,"endColumn":51},{"ruleId":"84","severity":1,"message":"85","line":40,"column":6,"nodeType":"86","endLine":40,"endColumn":16,"suggestions":"87"},{"ruleId":"69","severity":1,"message":"88","line":59,"column":13,"nodeType":"71","messageId":"72","endLine":59,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Link' is defined but never used.","no-new-object",["89"],"'axios' is defined but never used.","'formStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveTimerData'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'response' is assigned a value but never used.","no-object-constructor",{"desc":"91","fix":"92"},"Update the dependencies array to be: [navigate, saveTimerData]",{"range":"93","text":"94"},[1340,1350],"[navigate, saveTimerData]"]